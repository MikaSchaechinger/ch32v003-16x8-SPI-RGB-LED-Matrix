$date
	Sat Apr 19 00:00:15 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module Bank_Distributor_tb $end
$var parameter 32 ! BANK_ADDR_BITS $end
$var parameter 32 " BANK_DEPTH $end
$var parameter 32 # CHANNEL_BANDWIDTH $end
$var parameter 32 $ CHANNEL_DEPTH $end
$var parameter 32 % CHANNEL_NUMBER $end
$var parameter 32 & GLOBAL_ADDR_BITS $end
$var reg 6 ' I_address_in [5:0] $end
$var reg 1 ( I_clk_in $end
$scope module dut $end
$var wire 6 ) I_address_in [5:0] $end
$var wire 1 ( I_clk_in $end
$var parameter 32 * BANK_ADDR_BITS $end
$var parameter 32 + BANK_DEPTH $end
$var parameter 32 , BANK_INDEX_BITS $end
$var parameter 32 - CHANNEL_BANDWIDTH $end
$var parameter 32 . CHANNEL_NUMBER $end
$var parameter 32 / DEPTH_OFFSET $end
$var parameter 32 0 GLOBAL_ADDR_BITS $end
$var reg 6 1 addr_in [5:0] $end
$var reg 4 2 addr_out_0 [3:0] $end
$var reg 4 3 addr_out_1 [3:0] $end
$var reg 4 4 addr_out_2 [3:0] $end
$var reg 8 5 data_in_0 [7:0] $end
$var reg 8 6 data_in_1 [7:0] $end
$var reg 8 7 data_in_2 [7:0] $end
$var reg 8 8 data_out_0 [7:0] $end
$var reg 8 9 data_out_1 [7:0] $end
$var reg 8 : data_out_2 [7:0] $end
$var integer 32 ; channel_offset [31:0] $end
$scope begin $ivl_for_loop2 $end
$var integer 32 < ch [31:0] $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop3 $end
$var integer 32 = i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b110 0
b100 /
b11 .
b1000 -
b10 ,
b1100 +
b100 *
b110 &
b11 %
b100 $
b1000 #
b1100 "
b100 !
$end
#0
$dumpvars
b0 =
b11 <
b0 ;
b0 :
b1010101 9
b11111111 8
b0 7
b1010101 6
b11111111 5
b1000 4
b100 3
b0 2
b0 1
b0 )
x(
b0 '
$end
#1000
b1001 4
b101 3
b1 2
b1 1
b11 <
b1 '
b1 )
b1 =
#2000
b1010 4
b110 3
b10 2
b10 1
b11 <
b10 '
b10 )
b10 =
#3000
b1011 4
b111 3
b11 2
b11 1
b11 <
b11 '
b11 )
b11 =
#4000
b1010101 :
b11111111 9
b0 8
b100 4
b0 3
b1000 2
b100 1
b11 <
b1 ;
b100 '
b100 )
b100 =
#5000
b101 4
b1 3
b1001 2
b101 1
b11 <
b101 '
b101 )
b101 =
#6000
b110 4
b10 3
b1010 2
b110 1
b11 <
b110 '
b110 )
b110 =
#7000
b111 4
b11 3
b1011 2
b111 1
b11 <
b111 '
b111 )
b111 =
#8000
b11111111 :
b0 9
b1010101 8
b0 4
b1000 3
b100 2
b1000 1
b11 <
b10 ;
b1000 '
b1000 )
b1000 =
#9000
b1 4
b1001 3
b101 2
b1001 1
b11 <
b1001 '
b1001 )
b1001 =
#10000
b10 4
b1010 3
b110 2
b1010 1
b11 <
b1010 '
b1010 )
b1010 =
#11000
b11 4
b1011 3
b111 2
b1011 1
b11 <
b1011 '
b1011 )
b1011 =
#12000
b1100 =
