#! 
:ivl_version "13.0 (devel)" "(s20221226-345-gc9548f033)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "C:\Users\Mika\PROGRA~1\FPGA\LUSHAY~1\OSS-CA~1\OSS-CA~1\lib\ivl\system.vpi";
:vpi_module "C:\Users\Mika\PROGRA~1\FPGA\LUSHAY~1\OSS-CA~1\OSS-CA~1\lib\ivl\vhdl_sys.vpi";
:vpi_module "C:\Users\Mika\PROGRA~1\FPGA\LUSHAY~1\OSS-CA~1\OSS-CA~1\lib\ivl\vhdl_textio.vpi";
:vpi_module "C:\Users\Mika\PROGRA~1\FPGA\LUSHAY~1\OSS-CA~1\OSS-CA~1\lib\ivl\v2005_math.vpi";
:vpi_module "C:\Users\Mika\PROGRA~1\FPGA\LUSHAY~1\OSS-CA~1\OSS-CA~1\lib\ivl\va_math.vpi";
:vpi_module "C:\Users\Mika\PROGRA~1\FPGA\LUSHAY~1\OSS-CA~1\OSS-CA~1\lib\ivl\v2009.vpi";
S_00000000065804e0 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0000000006586e60 .scope module, "Double_Buffer_tb" "Double_Buffer_tb" 3 3;
 .timescale -9 -12;
P_0000000006586ff0 .param/l "ADDRESS_DEPTH" 1 3 6, +C4<00000000000000000000000000001000>;
P_0000000006587028 .param/l "BANDWIDTH" 1 3 10, +C4<00000000000000000000000000001000>;
P_0000000006587060 .param/l "BANK_COUNT" 1 3 7, +C4<00000000000000000000000000000001>;
P_0000000006587098 .param/l "BLOCK_COUNT" 1 3 8, +C4<00000000000000000000000000000001>;
P_00000000065870d0 .param/l "BLOCK_DATA_WIDTH" 1 3 9, +C4<00000000000000000000000000001000>;
v00000000065e2b70 .array "ada", 0 0, 2 0;
v00000000065e32f0 .array "adb", 0 0, 2 0;
v00000000065e18b0_0 .var "clk_data_in", 0 0;
v00000000065e1950_0 .var "clk_data_out", 0 0;
v00000000065e3430_0 .var "clka", 0 0;
v00000000065e27b0_0 .var "clkb", 0 0;
v00000000065e2850_0 .net "data_valid", 0 0, v00000000065e2ad0_0;  1 drivers
v00000000065e19f0 .array "din", 0 0, 7 0;
v00000000065e3570_0 .net "dout", 7 0, v00000000065e20d0_0;  1 drivers
v00000000065e3610_0 .var "rst_n", 0 0;
v00000000065e2210_0 .var "swap_trigger", 0 0;
E_000000000656b450 .event anyedge, v00000000065e2ad0_0;
S_00000000063d9850 .scope begin, "$ivl_for_loop12" "$ivl_for_loop12" 3 68, 3 68 0, S_0000000006586e60;
 .timescale -9 -12;
v000000000657a710_0 .var/2s "i", 31 0;
E_000000000656b2d0 .event posedge, v000000000657aa30_0;
S_00000000063d99e0 .scope begin, "$ivl_for_loop13" "$ivl_for_loop13" 3 88, 3 88 0, S_0000000006586e60;
 .timescale -9 -12;
v000000000657af30_0 .var/2s "i", 31 0;
E_000000000656a910 .event posedge, v000000000657b390_0;
S_00000000063d9b70 .scope module, "dut" "Double_Buffer" 3 36, 4 3 0, S_0000000006586e60;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "rst_n";
    .port_info 1 /INPUT 1 "clka";
    .port_info 2 /INPUT 1 "clk_data_in";
    .port_info 3 /INPUT 3 "ada";
    .port_info 4 /INPUT 8 "din";
    .port_info 5 /INPUT 1 "clkb";
    .port_info 6 /INPUT 1 "clk_data_out";
    .port_info 7 /INPUT 3 "adb";
    .port_info 8 /OUTPUT 8 "dout_flat";
    .port_info 9 /INPUT 1 "swap_trigger";
    .port_info 10 /OUTPUT 1 "data_valid";
P_00000000063efb70 .param/l "ADDRESS_DEPTH" 0 4 4, +C4<00000000000000000000000000001000>;
P_00000000063efba8 .param/l "BANDWIDTH" 0 4 8, +C4<00000000000000000000000000001000>;
P_00000000063efbe0 .param/l "BANK_COUNT" 0 4 5, +C4<00000000000000000000000000000001>;
P_00000000063efc18 .param/l "BLOCK_COUNT" 0 4 6, +C4<00000000000000000000000000000001>;
P_00000000063efc50 .param/l "BLOCK_DATA_WIDTH" 0 4 7, +C4<00000000000000000000000000001000>;
enum0000000006428bb0 .enum4 (1)
   "BUFFER_0" 1'b0,
   "BUFFER_1" 1'b1
 ;
L_0000000006522dd0 .functor NOT 1, L_00000000065e3390, C4<0>, C4<0>, C4<0>;
L_00000000065233f0 .functor AND 1, L_00000000065e1a90, L_0000000006522dd0, C4<1>, C4<1>;
L_0000000006522a50 .functor NOT 1, L_00000000065e2490, C4<0>, C4<0>, C4<0>;
L_0000000006523460 .functor AND 1, L_00000000065e1770, L_0000000006522a50, C4<1>, C4<1>;
L_0000000006522970 .functor AND 1, v00000000065e2e90_0, L_00000000065233f0, C4<1>, C4<1>;
L_00000000065243b0 .functor NOT 1, v00000000065e3610_0, C4<0>, C4<0>, C4<0>;
v00000000065e2b70_0 .array/port v00000000065e2b70, 0;
L_0000000006523f50 .functor BUFZ 3, v00000000065e2b70_0, C4<000>, C4<000>, C4<000>;
v00000000065e19f0_0 .array/port v00000000065e19f0, 0;
L_0000000006523b60 .functor BUFZ 8, v00000000065e19f0_0, C4<00000000>, C4<00000000>, C4<00000000>;
L_0000000006524260 .functor AND 1, v00000000065e3070_0, L_0000000006523460, C4<1>, C4<1>;
L_00000000065230e0 .functor NOT 1, v00000000065e3610_0, C4<0>, C4<0>, C4<0>;
v00000000065e32f0_0 .array/port v00000000065e32f0, 0;
L_00000000065234d0 .functor BUFZ 3, v00000000065e32f0_0, C4<000>, C4<000>, C4<000>;
L_0000000006523150 .functor AND 1, v00000000065e31b0_0, L_00000000065233f0, C4<1>, C4<1>;
L_0000000006523fc0 .functor NOT 1, v00000000065e3610_0, C4<0>, C4<0>, C4<0>;
L_0000000006523850 .functor BUFZ 3, v00000000065e2b70_0, C4<000>, C4<000>, C4<000>;
L_0000000006522ac0 .functor BUFZ 8, v00000000065e19f0_0, C4<00000000>, C4<00000000>, C4<00000000>;
L_0000000006523a10 .functor AND 1, v00000000065e2710_0, L_0000000006523460, C4<1>, C4<1>;
L_0000000006523bd0 .functor NOT 1, v00000000065e3610_0, C4<0>, C4<0>, C4<0>;
L_0000000006523540 .functor BUFZ 3, v00000000065e32f0_0, C4<000>, C4<000>, C4<000>;
L_0000000006522ba0 .functor BUFZ 8, v00000000065e19f0_0, C4<00000000>, C4<00000000>, C4<00000000>;
v00000000065dfa10_0 .net *"_ivl_1", 0 0, L_00000000065e1a90;  1 drivers
v00000000065e05f0_0 .net *"_ivl_11", 0 0, L_00000000065e2490;  1 drivers
v00000000065e0550_0 .net *"_ivl_12", 0 0, L_0000000006522a50;  1 drivers
v00000000065de750_0 .net *"_ivl_3", 0 0, L_00000000065e3390;  1 drivers
v00000000065e2170_0 .net *"_ivl_4", 0 0, L_0000000006522dd0;  1 drivers
v00000000065e2530_0 .net *"_ivl_9", 0 0, L_00000000065e1770;  1 drivers
v00000000065e25d0 .array "ada", 0 0;
v00000000065e25d0_0 .net v00000000065e25d0 0, 2 0, v00000000065e2b70_0; 1 drivers
v00000000065e2cb0 .array "adb", 0 0;
v00000000065e2cb0_0 .net v00000000065e2cb0 0, 2 0, v00000000065e32f0_0; 1 drivers
v00000000065e2e90_0 .var "cea0", 0 0;
v00000000065e31b0_0 .var "cea1", 0 0;
v00000000065e3070_0 .var "ceb0", 0 0;
v00000000065e2710_0 .var "ceb1", 0 0;
v00000000065e2d50_0 .net "clk_data_in", 0 0, v00000000065e18b0_0;  1 drivers
v00000000065e1810_0 .var "clk_data_in_d", 1 0;
v00000000065e22b0_0 .net "clk_data_out", 0 0, v00000000065e1950_0;  1 drivers
v00000000065e1ef0_0 .var "clk_data_out_d", 1 0;
v00000000065e1e50_0 .net "clka", 0 0, v00000000065e3430_0;  1 drivers
v00000000065e2df0_0 .net "clkb", 0 0, v00000000065e27b0_0;  1 drivers
v00000000065e2ad0_0 .var "data_valid", 0 0;
v00000000065e2a30 .array "din", 0 0;
v00000000065e2a30_0 .net v00000000065e2a30 0, 7 0, v00000000065e19f0_0; 1 drivers
v00000000065e1f90_0 .net "din0", 7 0, L_0000000006522ba0;  1 drivers
v00000000065e2f30_0 .net "dout_buffer0", 7 0, v00000000065d33d0_0;  1 drivers
v00000000065e2030_0 .net "dout_buffer1", 7 0, v00000000065dfd30_0;  1 drivers
v00000000065e20d0_0 .var "dout_flat", 7 0;
v00000000065e2670_0 .net "read_pulse", 0 0, L_0000000006523460;  1 drivers
v00000000065e2fd0_0 .net "rst_n", 0 0, v00000000065e3610_0;  1 drivers
v00000000065e34d0_0 .net "swap_trigger", 0 0, v00000000065e2210_0;  1 drivers
v00000000065e3110_0 .var "write_buffer", 0 0;
v00000000065e3250_0 .net "write_pulse", 0 0, L_00000000065233f0;  1 drivers
E_000000000656b010 .event anyedge, v00000000065e3110_0, v00000000065dfd30_0, v00000000065d33d0_0;
E_000000000656a950 .event anyedge, v00000000065e3110_0;
E_000000000656aad0/0 .event negedge, v00000000065e2fd0_0;
E_000000000656aad0/1 .event posedge, v000000000657b390_0;
E_000000000656aad0 .event/or E_000000000656aad0/0, E_000000000656aad0/1;
E_000000000656b210/0 .event negedge, v00000000065e2fd0_0;
E_000000000656b210/1 .event posedge, v000000000657aa30_0;
E_000000000656b210 .event/or E_000000000656b210/0, E_000000000656b210/1;
E_000000000656ac50/0 .event negedge, v00000000065e2fd0_0;
E_000000000656ac50/1 .event posedge, v00000000065e34d0_0;
E_000000000656ac50 .event/or E_000000000656ac50/0, E_000000000656ac50/1;
L_00000000065e1a90 .part v00000000065e1810_0, 0, 1;
L_00000000065e3390 .part v00000000065e1810_0, 1, 1;
L_00000000065e1770 .part v00000000065e1ef0_0, 0, 1;
L_00000000065e2490 .part v00000000065e1ef0_0, 1, 1;
S_00000000063efc90 .scope module, "buffer0" "Single_Buffer" 4 93, 5 1 0, S_00000000063d9b70;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "clka";
    .port_info 1 /INPUT 1 "cea";
    .port_info 2 /INPUT 1 "oce";
    .port_info 3 /INPUT 1 "reseta";
    .port_info 4 /INPUT 3 "ada";
    .port_info 5 /INPUT 8 "din";
    .port_info 6 /INPUT 1 "clkb";
    .port_info 7 /INPUT 1 "ceb";
    .port_info 8 /INPUT 1 "resetb";
    .port_info 9 /INPUT 3 "adb";
    .port_info 10 /OUTPUT 8 "dout_flat";
P_00000000063efe20 .param/l "ADDRESS_DEPTH" 0 5 2, +C4<00000000000000000000000000001000>;
P_00000000063efe58 .param/l "BANDWIDTH" 0 5 6, +C4<00000000000000000000000000001000>;
P_00000000063efe90 .param/l "BANK_COUNT" 0 5 3, +C4<00000000000000000000000000000001>;
P_00000000063efec8 .param/l "BLOCK_COUNT" 0 5 4, +C4<00000000000000000000000000000001>;
P_00000000063eff00 .param/l "BLOCK_DATA_WIDTH" 0 5 5, +C4<00000000000000000000000000001000>;
v00000000065d2570 .array "ada", 0 0;
v00000000065d2570_0 .net v00000000065d2570 0, 2 0, L_0000000006523f50; 1 drivers
v00000000065d3150 .array "adb", 0 0;
v00000000065d3150_0 .net v00000000065d3150 0, 2 0, L_00000000065234d0; 1 drivers
v00000000065d1e90_0 .net "cea", 0 0, L_0000000006522970;  1 drivers
v00000000065d31f0_0 .net "ceb", 0 0, L_0000000006524260;  1 drivers
v00000000065d1990_0 .net "clka", 0 0, v00000000065e3430_0;  alias, 1 drivers
v00000000065d1cb0_0 .net "clkb", 0 0, v00000000065e27b0_0;  alias, 1 drivers
v00000000065d3290 .array "din", 0 0;
v00000000065d3290_0 .net v00000000065d3290 0, 7 0, L_0000000006523b60; 1 drivers
v00000000065d33d0_0 .var "dout_flat", 7 0;
v00000000065d3470 .array "internal_dout", 0 0;
v00000000065d3470_0 .net v00000000065d3470 0, 7 0, v00000000065d2f70_0; 1 drivers
L_00000000065e3738 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v00000000065d1ad0_0 .net "oce", 0 0, L_00000000065e3738;  1 drivers
v00000000065d35b0_0 .net "reseta", 0 0, L_00000000065243b0;  1 drivers
v00000000065d1fd0_0 .net "resetb", 0 0, L_00000000065230e0;  1 drivers
E_000000000656b290 .event anyedge, v00000000065d2f70_0;
S_00000000063e9260 .scope begin, "$ivl_for_loop11" "$ivl_for_loop11" 5 49, 5 49 0, S_00000000063efc90;
 .timescale -9 -12;
v0000000006579b30_0 .var/2s "i", 31 0;
S_00000000063e93f0 .scope generate, "bank_gen[0]" "bank_gen[0]" 5 26, 5 26 0, S_00000000063efc90;
 .timescale -9 -12;
P_000000000656a550 .param/l "bank" 1 5 26, +C4<00>;
S_00000000063e9580 .scope module, "bank_inst" "Bank" 5 31, 6 1 0, S_00000000063e93f0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "clka";
    .port_info 1 /INPUT 1 "cea";
    .port_info 2 /INPUT 1 "oce";
    .port_info 3 /INPUT 1 "reseta";
    .port_info 4 /INPUT 3 "ada";
    .port_info 5 /INPUT 8 "din";
    .port_info 6 /INPUT 1 "clkb";
    .port_info 7 /INPUT 1 "ceb";
    .port_info 8 /INPUT 1 "resetb";
    .port_info 9 /INPUT 3 "adb";
    .port_info 10 /OUTPUT 8 "dout";
P_00000000063eff40 .param/l "ADDRESS_DEPTH" 0 6 2, +C4<00000000000000000000000000001000>;
P_00000000063eff78 .param/l "BANDWIDTH" 0 6 5, +C4<00000000000000000000000000001000>;
P_00000000063effb0 .param/l "BLOCK_COUNT" 0 6 4, +C4<00000000000000000000000000000001>;
P_00000000063effe8 .param/l "BLOCK_DATA_WIDTH" 0 6 3, +C4<00000000000000000000000000001000>;
v00000000065d1850_0 .net "ada", 2 0, L_0000000006523f50;  alias, 1 drivers
v00000000065d2cf0_0 .net "adb", 2 0, L_00000000065234d0;  alias, 1 drivers
v00000000065d1df0 .array "block_data_in", 0 0, 7 0;
v00000000065d1a30 .array "block_data_out", 0 0;
v00000000065d1a30_0 .net v00000000065d1a30 0, 7 0, v00000000065d17b0_0; 1 drivers
v00000000065d2d90_0 .net "cea", 0 0, L_0000000006522970;  alias, 1 drivers
v00000000065d2ed0_0 .net "ceb", 0 0, L_0000000006524260;  alias, 1 drivers
v00000000065d18f0_0 .net "clka", 0 0, v00000000065e3430_0;  alias, 1 drivers
v00000000065d21b0_0 .net "clkb", 0 0, v00000000065e27b0_0;  alias, 1 drivers
v00000000065d2110_0 .net "din", 7 0, L_0000000006523b60;  alias, 1 drivers
v00000000065d2f70_0 .var "dout", 7 0;
v00000000065d3010_0 .net "oce", 0 0, L_00000000065e3738;  alias, 1 drivers
v00000000065d2430_0 .net "reseta", 0 0, L_00000000065243b0;  alias, 1 drivers
v00000000065d30b0_0 .net "resetb", 0 0, L_00000000065230e0;  alias, 1 drivers
E_000000000656a990 .event anyedge, v00000000065d17b0_0;
E_000000000656d310 .event anyedge, v00000000065d2110_0;
S_00000000063fab40 .scope begin, "$ivl_for_loop8" "$ivl_for_loop8" 6 28, 6 28 0, S_00000000063e9580;
 .timescale -9 -12;
v0000000006579bd0_0 .var/2s "i", 31 0;
S_00000000063facd0 .scope begin, "$ivl_for_loop9" "$ivl_for_loop9" 6 62, 6 62 0, S_00000000063e9580;
 .timescale -9 -12;
v0000000006579c70_0 .var/2s "i", 31 0;
S_00000000063fae60 .scope generate, "block_gen[0]" "block_gen[0]" 6 37, 6 37 0, S_00000000063e9580;
 .timescale -9 -12;
P_000000000656c6d0 .param/l "block" 1 6 37, +C4<00>;
S_00000000063df620 .scope module, "sdpb_inst" "SDPB_Wrapper" 6 43, 7 3 0, S_00000000063fae60;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "clka";
    .port_info 1 /INPUT 1 "cea";
    .port_info 2 /INPUT 1 "oce";
    .port_info 3 /INPUT 1 "reseta";
    .port_info 4 /INPUT 3 "ada";
    .port_info 5 /INPUT 8 "din";
    .port_info 6 /INPUT 1 "clkb";
    .port_info 7 /INPUT 1 "ceb";
    .port_info 8 /INPUT 1 "resetb";
    .port_info 9 /INPUT 3 "adb";
    .port_info 10 /OUTPUT 8 "dout";
P_00000000063df7b0 .param/l "ADDRESS_DEPTH_A" 0 7 4, +C4<00000000000000000000000000001000>;
P_00000000063df7e8 .param/l "ADDRESS_DEPTH_B" 0 7 6, +C4<00000000000000000000000000001000>;
P_00000000063df820 .param/l "DATA_WIDTH_A" 0 7 5, +C4<00000000000000000000000000001000>;
P_00000000063df858 .param/l "DATA_WIDTH_B" 0 7 7, +C4<00000000000000000000000000001000>;
v00000000065d24d0_0 .net "ada", 2 0, L_0000000006523f50;  alias, 1 drivers
v00000000065d2250_0 .net "adb", 2 0, L_00000000065234d0;  alias, 1 drivers
v00000000065d2b10_0 .net "cea", 0 0, L_0000000006522970;  alias, 1 drivers
v00000000065d2390_0 .net "ceb", 0 0, L_0000000006524260;  alias, 1 drivers
v00000000065d29d0_0 .net "clka", 0 0, v00000000065e3430_0;  alias, 1 drivers
v00000000065d2a70_0 .net "clkb", 0 0, v00000000065e27b0_0;  alias, 1 drivers
v00000000065d1df0_0 .array/port v00000000065d1df0, 0;
v00000000065d1b70_0 .net "din", 7 0, v00000000065d1df0_0;  1 drivers
v00000000065d3330_0 .net "dout", 7 0, v00000000065d17b0_0;  alias, 1 drivers
v00000000065d1c10_0 .net "oce", 0 0, L_00000000065e3738;  alias, 1 drivers
v00000000065d2c50_0 .net "reseta", 0 0, L_00000000065243b0;  alias, 1 drivers
v00000000065d2bb0_0 .net "resetb", 0 0, L_00000000065230e0;  alias, 1 drivers
S_00000000063df8a0 .scope module, "sim_inst" "SDPB_sim" 7 33, 8 3 0, S_00000000063df620;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "clka";
    .port_info 1 /INPUT 1 "cea";
    .port_info 2 /INPUT 1 "oce";
    .port_info 3 /INPUT 1 "reseta";
    .port_info 4 /INPUT 3 "ada";
    .port_info 5 /INPUT 8 "din";
    .port_info 6 /INPUT 1 "clkb";
    .port_info 7 /INPUT 1 "ceb";
    .port_info 8 /INPUT 1 "resetb";
    .port_info 9 /INPUT 3 "adb";
    .port_info 10 /OUTPUT 8 "dout";
P_0000000006417e20 .param/l "ADDRESS_DEPTH_A" 0 8 4, +C4<00000000000000000000000000001000>;
P_0000000006417e58 .param/l "ADDRESS_DEPTH_B" 0 8 6, +C4<00000000000000000000000000001000>;
P_0000000006417e90 .param/l "DATA_WIDTH_A" 0 8 5, +C4<00000000000000000000000000001000>;
P_0000000006417ec8 .param/l "DATA_WIDTH_B" 0 8 7, +C4<00000000000000000000000000001000>;
P_0000000006417f00 .param/l "MEMORY_SIZE" 1 8 25, +C4<00000000000000000000000000001000>;
P_0000000006417f38 .param/l "TOTAL_BITS" 1 8 24, +C4<00000000000000000000000001000000>;
v000000000657ae90_0 .net "ada", 2 0, L_0000000006523f50;  alias, 1 drivers
v000000000657a0d0_0 .net "adb", 2 0, L_00000000065234d0;  alias, 1 drivers
v000000000657a850_0 .net "cea", 0 0, L_0000000006522970;  alias, 1 drivers
v000000000657a170_0 .net "ceb", 0 0, L_0000000006524260;  alias, 1 drivers
v000000000657aa30_0 .net "clka", 0 0, v00000000065e3430_0;  alias, 1 drivers
v000000000657b390_0 .net "clkb", 0 0, v00000000065e27b0_0;  alias, 1 drivers
v0000000006429290_0 .net "din", 7 0, v00000000065d1df0_0;  alias, 1 drivers
v00000000065d17b0_0 .var "dout", 7 0;
v00000000065d2e30_0 .var "dout_next", 7 0;
v00000000065d1d50 .array "memory", 7 0, 7 0;
v00000000065d3510_0 .net "oce", 0 0, L_00000000065e3738;  alias, 1 drivers
v00000000065d1710_0 .net "reseta", 0 0, L_00000000065243b0;  alias, 1 drivers
v00000000065d1f30_0 .net "resetb", 0 0, L_00000000065230e0;  alias, 1 drivers
E_000000000656cb90 .event posedge, v00000000065d1f30_0, v000000000657b390_0;
E_000000000656ccd0 .event posedge, v00000000065d1710_0, v000000000657aa30_0;
S_0000000006417f80 .scope begin, "$ivl_for_loop4" "$ivl_for_loop4" 8 36, 8 36 0, S_00000000063df8a0;
 .timescale -9 -12;
v000000000657afd0_0 .var/2s "i", 31 0;
S_0000000006418110 .scope begin, "$ivl_for_loop5" "$ivl_for_loop5" 8 47, 8 47 0, S_00000000063df8a0;
 .timescale -9 -12;
v0000000006579f90_0 .var/2s "i", 31 0;
S_000000000639dd80 .scope module, "buffer1" "Single_Buffer" 4 113, 5 1 0, S_00000000063d9b70;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "clka";
    .port_info 1 /INPUT 1 "cea";
    .port_info 2 /INPUT 1 "oce";
    .port_info 3 /INPUT 1 "reseta";
    .port_info 4 /INPUT 3 "ada";
    .port_info 5 /INPUT 8 "din";
    .port_info 6 /INPUT 1 "clkb";
    .port_info 7 /INPUT 1 "ceb";
    .port_info 8 /INPUT 1 "resetb";
    .port_info 9 /INPUT 3 "adb";
    .port_info 10 /OUTPUT 8 "dout_flat";
P_000000000639df10 .param/l "ADDRESS_DEPTH" 0 5 2, +C4<00000000000000000000000000001000>;
P_000000000639df48 .param/l "BANDWIDTH" 0 5 6, +C4<00000000000000000000000000001000>;
P_000000000639df80 .param/l "BANK_COUNT" 0 5 3, +C4<00000000000000000000000000000001>;
P_000000000639dfb8 .param/l "BLOCK_COUNT" 0 5 4, +C4<00000000000000000000000000000001>;
P_000000000639dff0 .param/l "BLOCK_DATA_WIDTH" 0 5 5, +C4<00000000000000000000000000001000>;
v00000000065df470 .array "ada", 0 0;
v00000000065df470_0 .net v00000000065df470 0, 2 0, L_0000000006523850; 1 drivers
v00000000065deb10 .array "adb", 0 0;
v00000000065deb10_0 .net v00000000065deb10 0, 2 0, L_0000000006523540; 1 drivers
v00000000065df650_0 .net "cea", 0 0, L_0000000006523150;  1 drivers
v00000000065df6f0_0 .net "ceb", 0 0, L_0000000006523a10;  1 drivers
v00000000065e02d0_0 .net "clka", 0 0, v00000000065e3430_0;  alias, 1 drivers
v00000000065e0410_0 .net "clkb", 0 0, v00000000065e27b0_0;  alias, 1 drivers
v00000000065df8d0 .array "din", 0 0;
v00000000065df8d0_0 .net v00000000065df8d0 0, 7 0, L_0000000006522ac0; 1 drivers
v00000000065dfd30_0 .var "dout_flat", 7 0;
v00000000065dfdd0 .array "internal_dout", 0 0;
v00000000065dfdd0_0 .net v00000000065dfdd0 0, 7 0, v00000000065dfb50_0; 1 drivers
L_00000000065e3780 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v00000000065de930_0 .net "oce", 0 0, L_00000000065e3780;  1 drivers
v00000000065de9d0_0 .net "reseta", 0 0, L_0000000006523fc0;  1 drivers
v00000000065df970_0 .net "resetb", 0 0, L_0000000006523bd0;  1 drivers
E_000000000656d390 .event anyedge, v00000000065dfb50_0;
S_00000000065d3ef0 .scope begin, "$ivl_for_loop11" "$ivl_for_loop11" 5 49, 5 49 0, S_000000000639dd80;
 .timescale -9 -12;
v00000000065d2070_0 .var/2s "i", 31 0;
S_00000000065d43a0 .scope generate, "bank_gen[0]" "bank_gen[0]" 5 26, 5 26 0, S_000000000639dd80;
 .timescale -9 -12;
P_000000000656c710 .param/l "bank" 1 5 26, +C4<00>;
S_00000000065d3720 .scope module, "bank_inst" "Bank" 5 31, 6 1 0, S_00000000065d43a0;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "clka";
    .port_info 1 /INPUT 1 "cea";
    .port_info 2 /INPUT 1 "oce";
    .port_info 3 /INPUT 1 "reseta";
    .port_info 4 /INPUT 3 "ada";
    .port_info 5 /INPUT 8 "din";
    .port_info 6 /INPUT 1 "clkb";
    .port_info 7 /INPUT 1 "ceb";
    .port_info 8 /INPUT 1 "resetb";
    .port_info 9 /INPUT 3 "adb";
    .port_info 10 /OUTPUT 8 "dout";
P_000000000639e030 .param/l "ADDRESS_DEPTH" 0 6 2, +C4<00000000000000000000000000001000>;
P_000000000639e068 .param/l "BANDWIDTH" 0 6 5, +C4<00000000000000000000000000001000>;
P_000000000639e0a0 .param/l "BLOCK_COUNT" 0 6 4, +C4<00000000000000000000000000000001>;
P_000000000639e0d8 .param/l "BLOCK_DATA_WIDTH" 0 6 3, +C4<00000000000000000000000000001000>;
v00000000065decf0_0 .net "ada", 2 0, L_0000000006523850;  alias, 1 drivers
v00000000065e04b0_0 .net "adb", 2 0, L_0000000006523540;  alias, 1 drivers
v00000000065ded90 .array "block_data_in", 0 0, 7 0;
v00000000065e0230 .array "block_data_out", 0 0;
v00000000065e0230_0 .net v00000000065e0230 0, 7 0, v00000000065df830_0; 1 drivers
v00000000065de890_0 .net "cea", 0 0, L_0000000006523150;  alias, 1 drivers
v00000000065e00f0_0 .net "ceb", 0 0, L_0000000006523a10;  alias, 1 drivers
v00000000065dfc90_0 .net "clka", 0 0, v00000000065e3430_0;  alias, 1 drivers
v00000000065deed0_0 .net "clkb", 0 0, v00000000065e27b0_0;  alias, 1 drivers
v00000000065dfab0_0 .net "din", 7 0, L_0000000006522ac0;  alias, 1 drivers
v00000000065dfb50_0 .var "dout", 7 0;
v00000000065df1f0_0 .net "oce", 0 0, L_00000000065e3780;  alias, 1 drivers
v00000000065df790_0 .net "reseta", 0 0, L_0000000006523fc0;  alias, 1 drivers
v00000000065df290_0 .net "resetb", 0 0, L_0000000006523bd0;  alias, 1 drivers
E_000000000656c590 .event anyedge, v00000000065df830_0;
E_000000000656d210 .event anyedge, v00000000065dfab0_0;
S_00000000065d3bd0 .scope begin, "$ivl_for_loop8" "$ivl_for_loop8" 6 28, 6 28 0, S_00000000065d3720;
 .timescale -9 -12;
v00000000065d22f0_0 .var/2s "i", 31 0;
S_00000000065d4080 .scope begin, "$ivl_for_loop9" "$ivl_for_loop9" 6 62, 6 62 0, S_00000000065d3720;
 .timescale -9 -12;
v00000000065d2610_0 .var/2s "i", 31 0;
S_00000000065d4530 .scope generate, "block_gen[0]" "block_gen[0]" 6 37, 6 37 0, S_00000000065d3720;
 .timescale -9 -12;
P_000000000656d410 .param/l "block" 1 6 37, +C4<00>;
S_00000000065d3d60 .scope module, "sdpb_inst" "SDPB_Wrapper" 6 43, 7 3 0, S_00000000065d4530;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "clka";
    .port_info 1 /INPUT 1 "cea";
    .port_info 2 /INPUT 1 "oce";
    .port_info 3 /INPUT 1 "reseta";
    .port_info 4 /INPUT 3 "ada";
    .port_info 5 /INPUT 8 "din";
    .port_info 6 /INPUT 1 "clkb";
    .port_info 7 /INPUT 1 "ceb";
    .port_info 8 /INPUT 1 "resetb";
    .port_info 9 /INPUT 3 "adb";
    .port_info 10 /OUTPUT 8 "dout";
P_000000000639e120 .param/l "ADDRESS_DEPTH_A" 0 7 4, +C4<00000000000000000000000000001000>;
P_000000000639e158 .param/l "ADDRESS_DEPTH_B" 0 7 6, +C4<00000000000000000000000000001000>;
P_000000000639e190 .param/l "DATA_WIDTH_A" 0 7 5, +C4<00000000000000000000000000001000>;
P_000000000639e1c8 .param/l "DATA_WIDTH_B" 0 7 7, +C4<00000000000000000000000000001000>;
v00000000065e0190_0 .net "ada", 2 0, L_0000000006523850;  alias, 1 drivers
v00000000065df010_0 .net "adb", 2 0, L_0000000006523540;  alias, 1 drivers
v00000000065dffb0_0 .net "cea", 0 0, L_0000000006523150;  alias, 1 drivers
v00000000065def70_0 .net "ceb", 0 0, L_0000000006523a10;  alias, 1 drivers
v00000000065dee30_0 .net "clka", 0 0, v00000000065e3430_0;  alias, 1 drivers
v00000000065df330_0 .net "clkb", 0 0, v00000000065e27b0_0;  alias, 1 drivers
v00000000065ded90_0 .array/port v00000000065ded90, 0;
v00000000065de7f0_0 .net "din", 7 0, v00000000065ded90_0;  1 drivers
v00000000065df3d0_0 .net "dout", 7 0, v00000000065df830_0;  alias, 1 drivers
v00000000065dfbf0_0 .net "oce", 0 0, L_00000000065e3780;  alias, 1 drivers
v00000000065dfe70_0 .net "reseta", 0 0, L_0000000006523fc0;  alias, 1 drivers
v00000000065dff10_0 .net "resetb", 0 0, L_0000000006523bd0;  alias, 1 drivers
S_00000000065d38b0 .scope module, "sim_inst" "SDPB_sim" 7 33, 8 3 0, S_00000000065d3d60;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "clka";
    .port_info 1 /INPUT 1 "cea";
    .port_info 2 /INPUT 1 "oce";
    .port_info 3 /INPUT 1 "reseta";
    .port_info 4 /INPUT 3 "ada";
    .port_info 5 /INPUT 8 "din";
    .port_info 6 /INPUT 1 "clkb";
    .port_info 7 /INPUT 1 "ceb";
    .port_info 8 /INPUT 1 "resetb";
    .port_info 9 /INPUT 3 "adb";
    .port_info 10 /OUTPUT 8 "dout";
P_00000000063a3ab0 .param/l "ADDRESS_DEPTH_A" 0 8 4, +C4<00000000000000000000000000001000>;
P_00000000063a3ae8 .param/l "ADDRESS_DEPTH_B" 0 8 6, +C4<00000000000000000000000000001000>;
P_00000000063a3b20 .param/l "DATA_WIDTH_A" 0 8 5, +C4<00000000000000000000000000001000>;
P_00000000063a3b58 .param/l "DATA_WIDTH_B" 0 8 7, +C4<00000000000000000000000000001000>;
P_00000000063a3b90 .param/l "MEMORY_SIZE" 1 8 25, +C4<00000000000000000000000000001000>;
P_00000000063a3bc8 .param/l "TOTAL_BITS" 1 8 24, +C4<00000000000000000000000001000000>;
v00000000065d27f0_0 .net "ada", 2 0, L_0000000006523850;  alias, 1 drivers
v00000000065d2890_0 .net "adb", 2 0, L_0000000006523540;  alias, 1 drivers
v00000000065d2930_0 .net "cea", 0 0, L_0000000006523150;  alias, 1 drivers
v00000000065e0370_0 .net "ceb", 0 0, L_0000000006523a10;  alias, 1 drivers
v00000000065dec50_0 .net "clka", 0 0, v00000000065e3430_0;  alias, 1 drivers
v00000000065df0b0_0 .net "clkb", 0 0, v00000000065e27b0_0;  alias, 1 drivers
v00000000065df5b0_0 .net "din", 7 0, v00000000065ded90_0;  alias, 1 drivers
v00000000065df830_0 .var "dout", 7 0;
v00000000065df150_0 .var "dout_next", 7 0;
v00000000065e0050 .array "memory", 7 0, 7 0;
v00000000065df510_0 .net "oce", 0 0, L_00000000065e3780;  alias, 1 drivers
v00000000065dea70_0 .net "reseta", 0 0, L_0000000006523fc0;  alias, 1 drivers
v00000000065debb0_0 .net "resetb", 0 0, L_0000000006523bd0;  alias, 1 drivers
E_000000000656d2d0 .event posedge, v00000000065debb0_0, v000000000657b390_0;
E_000000000656cfd0 .event posedge, v00000000065dea70_0, v000000000657aa30_0;
S_00000000065d3a40 .scope begin, "$ivl_for_loop4" "$ivl_for_loop4" 8 36, 8 36 0, S_00000000065d38b0;
 .timescale -9 -12;
v00000000065d26b0_0 .var/2s "i", 31 0;
S_00000000065d4210 .scope begin, "$ivl_for_loop5" "$ivl_for_loop5" 8 47, 8 47 0, S_00000000065d38b0;
 .timescale -9 -12;
v00000000065d2750_0 .var/2s "i", 31 0;
    .scope S_00000000063df8a0;
T_0 ;
    %wait E_000000000656ccd0;
    %load/vec4 v00000000065d1710_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.0, 8;
    %jmp T_0.1;
T_0.0 ;
    %load/vec4 v000000000657a850_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.2, 8;
    %fork t_1, S_0000000006417f80;
    %jmp t_0;
    .scope S_0000000006417f80;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000000000657afd0_0, 0, 32;
T_0.4 ; Top of for-loop 
    %load/vec4 v000000000657afd0_0;
    %cmpi/s 1, 0, 32;
    %jmp/0xz T_0.5, 5;
    %load/vec4 v0000000006429290_0;
    %load/vec4 v000000000657afd0_0;
    %muli 8, 0, 32;
    %part/s 8;
    %load/vec4 v000000000657ae90_0;
    %pad/u 32;
    %muli 1, 0, 32;
    %load/vec4 v000000000657afd0_0;
    %add;
    %ix/vec4 3;
    %ix/load 4, 0, 0; Constant delay
    %assign/vec4/a/d v00000000065d1d50, 0, 4;
T_0.6 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000000000657afd0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000000000657afd0_0, 0, 32;
    %jmp T_0.4;
T_0.5 ; for-loop exit label
    %end;
    .scope S_00000000063df8a0;
t_0 %join;
T_0.2 ;
T_0.1 ;
    %jmp T_0;
    .thread T_0;
    .scope S_00000000063df8a0;
T_1 ;
    %wait E_000000000656cb90;
    %load/vec4 v00000000065d1f30_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.0, 8;
    %pushi/vec4 0, 0, 8;
    %assign/vec4 v00000000065d2e30_0, 0;
    %jmp T_1.1;
T_1.0 ;
    %load/vec4 v000000000657a170_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.2, 8;
    %fork t_3, S_0000000006418110;
    %jmp t_2;
    .scope S_0000000006418110;
t_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000000006579f90_0, 0, 32;
T_1.4 ; Top of for-loop 
    %load/vec4 v0000000006579f90_0;
    %cmpi/s 1, 0, 32;
    %jmp/0xz T_1.5, 5;
    %load/vec4 v000000000657a0d0_0;
    %pad/u 32;
    %muli 1, 0, 32;
    %load/vec4 v0000000006579f90_0;
    %add;
    %ix/vec4 4;
    %load/vec4a v00000000065d1d50, 4;
    %ix/load 5, 0, 0;
    %load/vec4 v0000000006579f90_0;
    %muli 8, 0, 32;
    %ix/vec4/s 4;
    %assign/vec4/off/d v00000000065d2e30_0, 4, 5;
T_1.6 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000000006579f90_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0000000006579f90_0, 0, 32;
    %jmp T_1.4;
T_1.5 ; for-loop exit label
    %end;
    .scope S_00000000063df8a0;
t_2 %join;
T_1.2 ;
T_1.1 ;
    %jmp T_1;
    .thread T_1;
    .scope S_00000000063df8a0;
T_2 ;
    %wait E_000000000656a910;
    %load/vec4 v00000000065d3510_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_2.0, 8;
    %load/vec4 v00000000065d2e30_0;
    %assign/vec4 v00000000065d17b0_0, 0;
T_2.0 ;
    %jmp T_2;
    .thread T_2;
    .scope S_00000000063e9580;
T_3 ;
Ewait_0 .event/or E_000000000656d310, E_0x0;
    %wait Ewait_0;
    %fork t_5, S_00000000063fab40;
    %jmp t_4;
    .scope S_00000000063fab40;
t_5 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000000006579bd0_0, 0, 32;
T_3.0 ; Top of for-loop 
    %load/vec4 v0000000006579bd0_0;
    %cmpi/s 1, 0, 32;
    %jmp/0xz T_3.1, 5;
    %load/vec4 v00000000065d2110_0;
    %load/vec4 v0000000006579bd0_0;
    %muli 8, 0, 32;
    %part/s 8;
    %ix/getv/s 4, v0000000006579bd0_0;
    %store/vec4a v00000000065d1df0, 4, 0;
T_3.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000000006579bd0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0000000006579bd0_0, 0, 32;
    %jmp T_3.0;
T_3.1 ; for-loop exit label
    %end;
    .scope S_00000000063e9580;
t_4 %join;
    %jmp T_3;
    .thread T_3, $push;
    .scope S_00000000063e9580;
T_4 ;
Ewait_1 .event/or E_000000000656a990, E_0x0;
    %wait Ewait_1;
    %fork t_7, S_00000000063facd0;
    %jmp t_6;
    .scope S_00000000063facd0;
t_7 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000000006579c70_0, 0, 32;
T_4.0 ; Top of for-loop 
    %load/vec4 v0000000006579c70_0;
    %cmpi/s 1, 0, 32;
    %jmp/0xz T_4.1, 5;
    %ix/getv/s 4, v0000000006579c70_0;
    %load/vec4a v00000000065d1a30, 4;
    %load/vec4 v0000000006579c70_0;
    %muli 8, 0, 32;
    %ix/vec4/s 4;
    %store/vec4 v00000000065d2f70_0, 4, 8;
T_4.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000000006579c70_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0000000006579c70_0, 0, 32;
    %jmp T_4.0;
T_4.1 ; for-loop exit label
    %end;
    .scope S_00000000063e9580;
t_6 %join;
    %jmp T_4;
    .thread T_4, $push;
    .scope S_00000000063efc90;
T_5 ;
Ewait_2 .event/or E_000000000656b290, E_0x0;
    %wait Ewait_2;
    %fork t_9, S_00000000063e9260;
    %jmp t_8;
    .scope S_00000000063e9260;
t_9 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000000006579b30_0, 0, 32;
T_5.0 ; Top of for-loop 
    %load/vec4 v0000000006579b30_0;
    %cmpi/s 1, 0, 32;
    %jmp/0xz T_5.1, 5;
    %ix/getv/s 4, v0000000006579b30_0;
    %load/vec4a v00000000065d3470, 4;
    %load/vec4 v0000000006579b30_0;
    %muli 8, 0, 32;
    %ix/vec4/s 4;
    %store/vec4 v00000000065d33d0_0, 4, 8;
T_5.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000000006579b30_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0000000006579b30_0, 0, 32;
    %jmp T_5.0;
T_5.1 ; for-loop exit label
    %end;
    .scope S_00000000063efc90;
t_8 %join;
    %jmp T_5;
    .thread T_5, $push;
    .scope S_00000000065d38b0;
T_6 ;
    %wait E_000000000656cfd0;
    %load/vec4 v00000000065dea70_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_6.0, 8;
    %jmp T_6.1;
T_6.0 ;
    %load/vec4 v00000000065d2930_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_6.2, 8;
    %fork t_11, S_00000000065d3a40;
    %jmp t_10;
    .scope S_00000000065d3a40;
t_11 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000000065d26b0_0, 0, 32;
T_6.4 ; Top of for-loop 
    %load/vec4 v00000000065d26b0_0;
    %cmpi/s 1, 0, 32;
    %jmp/0xz T_6.5, 5;
    %load/vec4 v00000000065df5b0_0;
    %load/vec4 v00000000065d26b0_0;
    %muli 8, 0, 32;
    %part/s 8;
    %load/vec4 v00000000065d27f0_0;
    %pad/u 32;
    %muli 1, 0, 32;
    %load/vec4 v00000000065d26b0_0;
    %add;
    %ix/vec4 3;
    %ix/load 4, 0, 0; Constant delay
    %assign/vec4/a/d v00000000065e0050, 0, 4;
T_6.6 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000000065d26b0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000000065d26b0_0, 0, 32;
    %jmp T_6.4;
T_6.5 ; for-loop exit label
    %end;
    .scope S_00000000065d38b0;
t_10 %join;
T_6.2 ;
T_6.1 ;
    %jmp T_6;
    .thread T_6;
    .scope S_00000000065d38b0;
T_7 ;
    %wait E_000000000656d2d0;
    %load/vec4 v00000000065debb0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_7.0, 8;
    %pushi/vec4 0, 0, 8;
    %assign/vec4 v00000000065df150_0, 0;
    %jmp T_7.1;
T_7.0 ;
    %load/vec4 v00000000065e0370_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_7.2, 8;
    %fork t_13, S_00000000065d4210;
    %jmp t_12;
    .scope S_00000000065d4210;
t_13 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000000065d2750_0, 0, 32;
T_7.4 ; Top of for-loop 
    %load/vec4 v00000000065d2750_0;
    %cmpi/s 1, 0, 32;
    %jmp/0xz T_7.5, 5;
    %load/vec4 v00000000065d2890_0;
    %pad/u 32;
    %muli 1, 0, 32;
    %load/vec4 v00000000065d2750_0;
    %add;
    %ix/vec4 4;
    %load/vec4a v00000000065e0050, 4;
    %ix/load 5, 0, 0;
    %load/vec4 v00000000065d2750_0;
    %muli 8, 0, 32;
    %ix/vec4/s 4;
    %assign/vec4/off/d v00000000065df150_0, 4, 5;
T_7.6 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000000065d2750_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000000065d2750_0, 0, 32;
    %jmp T_7.4;
T_7.5 ; for-loop exit label
    %end;
    .scope S_00000000065d38b0;
t_12 %join;
T_7.2 ;
T_7.1 ;
    %jmp T_7;
    .thread T_7;
    .scope S_00000000065d38b0;
T_8 ;
    %wait E_000000000656a910;
    %load/vec4 v00000000065df510_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_8.0, 8;
    %load/vec4 v00000000065df150_0;
    %assign/vec4 v00000000065df830_0, 0;
T_8.0 ;
    %jmp T_8;
    .thread T_8;
    .scope S_00000000065d3720;
T_9 ;
Ewait_3 .event/or E_000000000656d210, E_0x0;
    %wait Ewait_3;
    %fork t_15, S_00000000065d3bd0;
    %jmp t_14;
    .scope S_00000000065d3bd0;
t_15 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000000065d22f0_0, 0, 32;
T_9.0 ; Top of for-loop 
    %load/vec4 v00000000065d22f0_0;
    %cmpi/s 1, 0, 32;
    %jmp/0xz T_9.1, 5;
    %load/vec4 v00000000065dfab0_0;
    %load/vec4 v00000000065d22f0_0;
    %muli 8, 0, 32;
    %part/s 8;
    %ix/getv/s 4, v00000000065d22f0_0;
    %store/vec4a v00000000065ded90, 4, 0;
T_9.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000000065d22f0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000000065d22f0_0, 0, 32;
    %jmp T_9.0;
T_9.1 ; for-loop exit label
    %end;
    .scope S_00000000065d3720;
t_14 %join;
    %jmp T_9;
    .thread T_9, $push;
    .scope S_00000000065d3720;
T_10 ;
Ewait_4 .event/or E_000000000656c590, E_0x0;
    %wait Ewait_4;
    %fork t_17, S_00000000065d4080;
    %jmp t_16;
    .scope S_00000000065d4080;
t_17 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000000065d2610_0, 0, 32;
T_10.0 ; Top of for-loop 
    %load/vec4 v00000000065d2610_0;
    %cmpi/s 1, 0, 32;
    %jmp/0xz T_10.1, 5;
    %ix/getv/s 4, v00000000065d2610_0;
    %load/vec4a v00000000065e0230, 4;
    %load/vec4 v00000000065d2610_0;
    %muli 8, 0, 32;
    %ix/vec4/s 4;
    %store/vec4 v00000000065dfb50_0, 4, 8;
T_10.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000000065d2610_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000000065d2610_0, 0, 32;
    %jmp T_10.0;
T_10.1 ; for-loop exit label
    %end;
    .scope S_00000000065d3720;
t_16 %join;
    %jmp T_10;
    .thread T_10, $push;
    .scope S_000000000639dd80;
T_11 ;
Ewait_5 .event/or E_000000000656d390, E_0x0;
    %wait Ewait_5;
    %fork t_19, S_00000000065d3ef0;
    %jmp t_18;
    .scope S_00000000065d3ef0;
t_19 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000000065d2070_0, 0, 32;
T_11.0 ; Top of for-loop 
    %load/vec4 v00000000065d2070_0;
    %cmpi/s 1, 0, 32;
    %jmp/0xz T_11.1, 5;
    %ix/getv/s 4, v00000000065d2070_0;
    %load/vec4a v00000000065dfdd0, 4;
    %load/vec4 v00000000065d2070_0;
    %muli 8, 0, 32;
    %ix/vec4/s 4;
    %store/vec4 v00000000065dfd30_0, 4, 8;
T_11.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000000065d2070_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000000065d2070_0, 0, 32;
    %jmp T_11.0;
T_11.1 ; for-loop exit label
    %end;
    .scope S_000000000639dd80;
t_18 %join;
    %jmp T_11;
    .thread T_11, $push;
    .scope S_00000000063d9b70;
T_12 ;
    %wait E_000000000656ac50;
    %load/vec4 v00000000065e2fd0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_12.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v00000000065e3110_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v00000000065e2ad0_0, 0;
    %jmp T_12.1;
T_12.0 ;
    %load/vec4 v00000000065e3110_0;
    %cmpi/e 0, 0, 1;
    %flag_mov 8, 4;
    %jmp/0 T_12.2, 8;
    %pushi/vec4 1, 0, 1;
    %jmp/1 T_12.3, 8;
T_12.2 ; End of true expr.
    %pushi/vec4 0, 0, 1;
    %jmp/0 T_12.3, 8;
 ; End of false expr.
    %blend;
T_12.3;
    %assign/vec4 v00000000065e3110_0, 0;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v00000000065e2ad0_0, 0;
T_12.1 ;
    %jmp T_12;
    .thread T_12;
    .scope S_00000000063d9b70;
T_13 ;
    %wait E_000000000656b210;
    %load/vec4 v00000000065e2fd0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_13.0, 8;
    %pushi/vec4 0, 0, 2;
    %assign/vec4 v00000000065e1810_0, 0;
    %jmp T_13.1;
T_13.0 ;
    %load/vec4 v00000000065e2d50_0;
    %ix/load 4, 0, 0;
    %ix/load 5, 0, 0;
    %flag_set/imm 4, 0;
    %assign/vec4/off/d v00000000065e1810_0, 4, 5;
    %load/vec4 v00000000065e1810_0;
    %parti/s 1, 0, 2;
    %ix/load 4, 1, 0;
    %ix/load 5, 0, 0;
    %flag_set/imm 4, 0;
    %assign/vec4/off/d v00000000065e1810_0, 4, 5;
T_13.1 ;
    %jmp T_13;
    .thread T_13;
    .scope S_00000000063d9b70;
T_14 ;
    %wait E_000000000656aad0;
    %load/vec4 v00000000065e2fd0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_14.0, 8;
    %pushi/vec4 0, 0, 2;
    %assign/vec4 v00000000065e1ef0_0, 0;
    %jmp T_14.1;
T_14.0 ;
    %load/vec4 v00000000065e22b0_0;
    %ix/load 4, 0, 0;
    %ix/load 5, 0, 0;
    %flag_set/imm 4, 0;
    %assign/vec4/off/d v00000000065e1ef0_0, 4, 5;
    %load/vec4 v00000000065e1ef0_0;
    %parti/s 1, 0, 2;
    %ix/load 4, 1, 0;
    %ix/load 5, 0, 0;
    %flag_set/imm 4, 0;
    %assign/vec4/off/d v00000000065e1ef0_0, 4, 5;
T_14.1 ;
    %jmp T_14;
    .thread T_14;
    .scope S_00000000063d9b70;
T_15 ;
Ewait_6 .event/or E_000000000656a950, E_0x0;
    %wait Ewait_6;
    %load/vec4 v00000000065e3110_0;
    %pushi/vec4 0, 0, 1;
    %cmp/e;
    %flag_get/vec4 4;
    %store/vec4 v00000000065e2e90_0, 0, 1;
    %load/vec4 v00000000065e3110_0;
    %pushi/vec4 1, 0, 1;
    %cmp/e;
    %flag_get/vec4 4;
    %store/vec4 v00000000065e31b0_0, 0, 1;
    %load/vec4 v00000000065e3110_0;
    %pushi/vec4 1, 0, 1;
    %cmp/e;
    %flag_get/vec4 4;
    %store/vec4 v00000000065e3070_0, 0, 1;
    %load/vec4 v00000000065e3110_0;
    %pushi/vec4 0, 0, 1;
    %cmp/e;
    %flag_get/vec4 4;
    %store/vec4 v00000000065e2710_0, 0, 1;
    %jmp T_15;
    .thread T_15, $push;
    .scope S_00000000063d9b70;
T_16 ;
Ewait_7 .event/or E_000000000656b010, E_0x0;
    %wait Ewait_7;
    %load/vec4 v00000000065e3110_0;
    %cmpi/e 0, 0, 1;
    %jmp/0xz  T_16.0, 4;
    %load/vec4 v00000000065e2030_0;
    %store/vec4 v00000000065e20d0_0, 0, 8;
    %jmp T_16.1;
T_16.0 ;
    %load/vec4 v00000000065e2f30_0;
    %store/vec4 v00000000065e20d0_0, 0, 8;
T_16.1 ;
    %jmp T_16;
    .thread T_16, $push;
    .scope S_0000000006586e60;
T_17 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000065e3430_0, 0, 1;
    %end;
    .thread T_17;
    .scope S_0000000006586e60;
T_18 ;
    %delay 5000, 0;
    %load/vec4 v00000000065e3430_0;
    %inv;
    %store/vec4 v00000000065e3430_0, 0, 1;
    %jmp T_18;
    .thread T_18;
    .scope S_0000000006586e60;
T_19 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000065e27b0_0, 0, 1;
    %end;
    .thread T_19;
    .scope S_0000000006586e60;
T_20 ;
    %delay 7000, 0;
    %load/vec4 v00000000065e27b0_0;
    %inv;
    %store/vec4 v00000000065e27b0_0, 0, 1;
    %jmp T_20;
    .thread T_20;
    .scope S_0000000006586e60;
T_21 ;
    %vpi_call/w 3 52 "$display", "=== Double_Buffer Testbench Start ===" {0 0 0};
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000065e3610_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000065e18b0_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000065e1950_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000065e2210_0, 0, 1;
    %pushi/vec4 0, 0, 3;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v00000000065e2b70, 4, 0;
    %pushi/vec4 0, 0, 3;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v00000000065e32f0, 4, 0;
    %pushi/vec4 0, 0, 8;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v00000000065e19f0, 4, 0;
    %delay 20000, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v00000000065e3610_0, 0, 1;
    %delay 10000, 0;
    %fork t_21, S_00000000063d9850;
    %jmp t_20;
    .scope S_00000000063d9850;
t_21 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000000000657a710_0, 0, 32;
T_21.0 ; Top of for-loop 
    %load/vec4 v000000000657a710_0;
    %cmpi/s 4, 0, 32;
    %jmp/0xz T_21.1, 5;
    %wait E_000000000656b2d0;
    %load/vec4 v000000000657a710_0;
    %pad/s 3;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v00000000065e2b70, 4, 0;
    %pushi/vec4 160, 0, 32;
    %load/vec4 v000000000657a710_0;
    %add;
    %pad/u 8;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v00000000065e19f0, 4, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v00000000065e18b0_0, 0, 1;
    %wait E_000000000656b2d0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000065e18b0_0, 0, 1;
T_21.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000000000657a710_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000000000657a710_0, 0, 32;
    %jmp T_21.0;
T_21.1 ; for-loop exit label
    %end;
    .scope S_0000000006586e60;
t_20 %join;
    %vpi_call/w 3 78 "$display", ">> Swap buffers" {0 0 0};
    %wait E_000000000656b2d0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v00000000065e2210_0, 0, 1;
    %wait E_000000000656b2d0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000065e2210_0, 0, 1;
T_21.3 ;
    %load/vec4 v00000000065e2850_0;
    %pad/u 32;
    %pushi/vec4 1, 0, 32;
    %cmp/e;
    %flag_get/vec4 4;
    %cmpi/ne 1, 0, 1;
    %jmp/0xz T_21.4, 6;
    %wait E_000000000656b450;
    %jmp T_21.3;
T_21.4 ;
    %fork t_23, S_00000000063d99e0;
    %jmp t_22;
    .scope S_00000000063d99e0;
t_23 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v000000000657af30_0, 0, 32;
T_21.5 ; Top of for-loop 
    %load/vec4 v000000000657af30_0;
    %cmpi/s 4, 0, 32;
    %jmp/0xz T_21.6, 5;
    %wait E_000000000656a910;
    %load/vec4 v000000000657af30_0;
    %pad/s 3;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v00000000065e32f0, 4, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v00000000065e1950_0, 0, 1;
    %wait E_000000000656a910;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000065e1950_0, 0, 1;
    %wait E_000000000656a910;
T_21.7 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v000000000657af30_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v000000000657af30_0, 0, 32;
    %jmp T_21.5;
T_21.6 ; for-loop exit label
    %end;
    .scope S_0000000006586e60;
t_22 %join;
    %vpi_call/w 3 98 "$display", "=== Test Complete ===" {0 0 0};
    %delay 20000, 0;
    %vpi_call/w 3 100 "$finish" {0 0 0};
    %end;
    .thread T_21;
    .scope S_0000000006586e60;
T_22 ;
    %vpi_call/w 3 104 "$dumpfile", "Double_Buffer_tb.vcd" {0 0 0};
    %vpi_call/w 3 105 "$dumpvars", 32'sb00000000000000000000000000000000, S_0000000006586e60 {0 0 0};
    %end;
    .thread T_22;
# The file index is used to find the file name in the following table.
:file_names 9;
    "N/A";
    "<interactive>";
    "-";
    "C:\Users\Mika\Programmieren\Projects\ch32v003-16x8-SPI-RGB-LED-Matrix\HDMI_to_Matrix_FPGA\HDMI_to_Matrix\src\d_double_buffer\Double_Buffer_tb.sv";
    "C:\Users\Mika\Programmieren\Projects\ch32v003-16x8-SPI-RGB-LED-Matrix\HDMI_to_Matrix_FPGA\HDMI_to_Matrix\src\d_double_buffer\Double_Buffer.sv";
    "C:\Users\Mika\Programmieren\Projects\ch32v003-16x8-SPI-RGB-LED-Matrix\HDMI_to_Matrix_FPGA\HDMI_to_Matrix\src\d_double_buffer\single_buffer\Single_Buffer.sv";
    "C:\Users\Mika\Programmieren\Projects\ch32v003-16x8-SPI-RGB-LED-Matrix\HDMI_to_Matrix_FPGA\HDMI_to_Matrix\src\d_double_buffer\single_buffer\bank\Bank.sv";
    "C:\Users\Mika\Programmieren\Projects\ch32v003-16x8-SPI-RGB-LED-Matrix\HDMI_to_Matrix_FPGA\HDMI_to_Matrix\src\d_double_buffer\SDPB\SDPB_wrapper.sv";
    "C:\Users\Mika\Programmieren\Projects\ch32v003-16x8-SPI-RGB-LED-Matrix\HDMI_to_Matrix_FPGA\HDMI_to_Matrix\src\d_double_buffer\SDPB\sim\SDPB_sim.sv";
