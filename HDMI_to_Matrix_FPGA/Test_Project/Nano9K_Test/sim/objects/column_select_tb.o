#! 
:ivl_version "13.0 (devel)" "(s20221226-345-gc9548f033)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "C:\Users\Mika\PROGRA~1\FPGA\LUSHAY~1\OSS-CA~1\OSS-CA~1\lib\ivl\system.vpi";
:vpi_module "C:\Users\Mika\PROGRA~1\FPGA\LUSHAY~1\OSS-CA~1\OSS-CA~1\lib\ivl\vhdl_sys.vpi";
:vpi_module "C:\Users\Mika\PROGRA~1\FPGA\LUSHAY~1\OSS-CA~1\OSS-CA~1\lib\ivl\vhdl_textio.vpi";
:vpi_module "C:\Users\Mika\PROGRA~1\FPGA\LUSHAY~1\OSS-CA~1\OSS-CA~1\lib\ivl\v2005_math.vpi";
:vpi_module "C:\Users\Mika\PROGRA~1\FPGA\LUSHAY~1\OSS-CA~1\OSS-CA~1\lib\ivl\va_math.vpi";
:vpi_module "C:\Users\Mika\PROGRA~1\FPGA\LUSHAY~1\OSS-CA~1\OSS-CA~1\lib\ivl\v2009.vpi";
S_00000000063d7980 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_00000000063ac6c0 .scope module, "column_select_tb" "column_select_tb" 3 1;
 .timescale 0 0;
P_00000000063cfbb0 .param/l "COLUMN_NUMBER" 1 3 3, +C4<00000000000000000000000000000011>;
v00000000063f84e0_0 .var "clk", 0 0;
v00000000063f88a0_0 .net "enable", 0 0, v00000000063f74a0_0;  1 drivers
v00000000063f7040_0 .var "extra_bit", 0 0;
v00000000063f7540_0 .net "ready", 0 0, v00000000063f8e40_0;  1 drivers
v00000000063f8580_0 .var "rst", 0 0;
v00000000063f8da0_0 .var "select_first", 0 0;
v00000000063f70e0_0 .var "select_next", 0 0;
v00000000063f7680_0 .net "ser", 0 0, v00000000063c41a0_0;  1 drivers
v00000000063f89e0_0 .net "ser_clk", 0 0, v00000000063c4240_0;  1 drivers
v00000000063f7360_0 .net "stcp", 0 0, v00000000063f8440_0;  1 drivers
S_00000000063ac850 .scope begin, "$ivl_for_loop1" "$ivl_for_loop1" 3 35, 3 35 0, S_00000000063ac6c0;
 .timescale 0 0;
v00000000063c4920_0 .var/2s "i", 31 0;
S_00000000063ac9e0 .scope begin, "$ivl_for_loop2" "$ivl_for_loop2" 3 48, 3 48 0, S_00000000063ac6c0;
 .timescale 0 0;
v00000000063c4740_0 .var/2s "i", 31 0;
S_000000000639c060 .scope begin, "$ivl_for_loop3" "$ivl_for_loop3" 3 50, 3 50 0, S_00000000063ac9e0;
 .timescale 0 0;
v00000000063c4880_0 .var/2s "j", 31 0;
S_000000000639c1f0 .scope begin, "$ivl_for_loop4" "$ivl_for_loop4" 3 62, 3 62 0, S_00000000063ac9e0;
 .timescale 0 0;
v00000000063c49c0_0 .var/2s "j", 31 0;
S_000000000639c380 .scope module, "cs" "column_select" 3 19, 4 1 0, S_00000000063ac6c0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "rst";
    .port_info 2 /INPUT 1 "select_first";
    .port_info 3 /INPUT 1 "select_next";
    .port_info 4 /INPUT 1 "extra_bit";
    .port_info 5 /OUTPUT 1 "ready";
    .port_info 6 /OUTPUT 1 "ser_clk";
    .port_info 7 /OUTPUT 1 "ser_data";
    .port_info 8 /OUTPUT 1 "ser_stcp";
    .port_info 9 /OUTPUT 1 "ser_n_enable";
enum00000000063bc810 .enum4 (3)
   "S0_STARTUP" 3'b000,
   "S1_WAIT_FOR_TX_FINISH" 3'b001,
   "S2_STCP" 3'b010,
   "S3_WAIT_FOR_SELECT" 3'b011,
   "S40_SELECT_FIRST" 3'b100,
   "S41_SELECT_NEXT" 3'b101,
   "S5_SEND_DATA" 3'b110
 ;
L_00000000063af9f0 .functor BUFZ 8, v00000000063f7900_0, C4<00000000>, C4<00000000>, C4<00000000>;
v00000000063f7e00_0 .net "clk", 0 0, v00000000063f84e0_0;  1 drivers
v00000000063f7900_0 .var "column_data", 7 0;
v00000000063f86c0_0 .var "counter", 1 0;
v00000000063f7180_0 .net "extra_bit", 0 0, v00000000063f7040_0;  1 drivers
v00000000063f8800_0 .var "next_state", 2 0;
v00000000063f8e40_0 .var "ready", 0 0;
v00000000063f8940_0 .net "rst", 0 0, v00000000063f8580_0;  1 drivers
v00000000063f83a0_0 .net "select_first", 0 0, v00000000063f8da0_0;  1 drivers
v00000000063f8b20_0 .net "select_next", 0 0, v00000000063f70e0_0;  1 drivers
v00000000063f6fa0_0 .net "ser_clk", 0 0, v00000000063c4240_0;  alias, 1 drivers
v00000000063f75e0_0 .net "ser_data", 0 0, v00000000063c41a0_0;  alias, 1 drivers
v00000000063f74a0_0 .var "ser_n_enable", 0 0;
v00000000063f8440_0 .var "ser_stcp", 0 0;
v00000000063f7220 .array "spi_data_in", 0 0;
v00000000063f7220_0 .net v00000000063f7220 0, 7 0, v00000000063f7900_0; 1 drivers
v00000000063f7f40_0 .var "start_tx", 0 0;
v00000000063f72c0_0 .var "state", 2 0;
v00000000063f7fe0_0 .net "tx_finish", 0 0, v00000000063f79a0_0;  1 drivers
E_00000000063d0070 .event anyedge, v00000000063f72c0_0, v00000000063f79a0_0, v00000000063f83a0_0, v00000000063f8b20_0;
S_0000000006392f30 .scope module, "shift_reg" "nspi_tx" 4 160, 5 1 0, S_000000000639c380;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "rst";
    .port_info 2 /INPUT 1 "start_tx";
    .port_info 3 /OUTPUT 1 "tx_finish";
    .port_info 4 /INPUT 8 "data_in";
    .port_info 5 /OUTPUT 1 "spi_clk";
    .port_info 6 /OUTPUT 1 "spi_mosi";
P_00000000063c39d0 .param/l "CHANNEL_NUMBER" 0 5 2, +C4<00000000000000000000000000000001>;
P_00000000063c3a08 .param/l "COUNTER_WIDTH" 1 5 27, +C4<00000000000000000000000000000100>;
P_00000000063c3a40 .param/l "MSB_FIRST" 0 5 4, +C4<00000000000000000000000000000001>;
P_00000000063c3a78 .param/l "SPI_SIZE" 0 5 3, +C4<00000000000000000000000000001000>;
enum00000000063bcbe0 .enum4 (2)
   "IDLE" 2'b00,
   "STARTING" 2'b01,
   "TRANSMIT" 2'b10
 ;
L_00000000063af280 .functor XOR 1, v00000000063c4100_0, v00000000063f84e0_0, C4<0>, C4<0>;
v00000000063c3fc0_0 .net "clk", 0 0, v00000000063f84e0_0;  alias, 1 drivers
v00000000063c4a60_0 .var "counter", 3 0;
v00000000063c3b60_0 .var "counter_overflow_flag", 0 0;
v00000000063c3c00 .array "data_in", 0 0;
v00000000063c3c00_0 .net v00000000063c3c00 0, 7 0, L_00000000063af9f0; 1 drivers
v00000000063c3d40 .array "data_in_reg", 0 0, 7 0;
v00000000063c3ca0_0 .var "next_state", 1 0;
v00000000063c4100_0 .var "r_clk", 0 0;
v00000000063c3e80_0 .net "rst", 0 0, v00000000063f8580_0;  alias, 1 drivers
v00000000063c4240_0 .var "spi_clk", 0 0;
v00000000063c41a0_0 .var "spi_mosi", 0 0;
v00000000063c3f20_0 .net "start_tx", 0 0, v00000000063f7f40_0;  1 drivers
v00000000063f7b80_0 .var "start_tx_internal", 0 0;
v00000000063f7400_0 .var "state", 1 0;
v00000000063f79a0_0 .var "tx_finish", 0 0;
v00000000063f7ea0_0 .net "w_xor_clk", 0 0, L_00000000063af280;  1 drivers
E_00000000063cfc30 .event posedge, v00000000063f7ea0_0;
E_00000000063d00f0 .event anyedge, v00000000063f7400_0, v00000000063f7b80_0, v00000000063c3b60_0;
E_00000000063d0e30 .event posedge, v00000000063c3e80_0, v00000000063c3fc0_0;
E_00000000063d1370 .event posedge, v00000000063f7b80_0;
S_00000000063930c0 .scope begin, "$ivl_for_loop5" "$ivl_for_loop5" 5 51, 5 51 0, S_0000000006392f30;
 .timescale 0 0;
v00000000063c4060_0 .var/2s "i", 31 0;
S_0000000006393250 .scope begin, "$ivl_for_loop6" "$ivl_for_loop6" 5 52, 5 52 0, S_00000000063930c0;
 .timescale 0 0;
v00000000063c4420_0 .var/2s "j", 31 0;
S_0000000006375b20 .scope begin, "$ivl_for_loop7" "$ivl_for_loop7" 5 57, 5 57 0, S_0000000006392f30;
 .timescale 0 0;
S_0000000006375cb0 .scope begin, "$ivl_for_loop8" "$ivl_for_loop8" 5 168, 5 168 0, S_0000000006392f30;
 .timescale 0 0;
v00000000063c3de0_0 .var/2s "i", 31 0;
S_0000000006375e40 .scope begin, "$ivl_for_loop9" "$ivl_for_loop9" 5 176, 5 176 0, S_0000000006392f30;
 .timescale 0 0;
v00000000063c46a0_0 .var/2s "i", 31 0;
    .scope S_0000000006392f30;
T_0 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000063f7b80_0, 0, 1;
    %pushi/vec4 0, 0, 2;
    %store/vec4 v00000000063f7400_0, 0, 2;
    %pushi/vec4 0, 0, 2;
    %store/vec4 v00000000063c3ca0_0, 0, 2;
    %pushi/vec4 0, 0, 4;
    %store/vec4 v00000000063c4a60_0, 0, 4;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000063c3b60_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000063c4100_0, 0, 1;
    %end;
    .thread T_0, $init;
    .scope S_0000000006392f30;
T_1 ;
    %wait E_00000000063d0e30;
    %load/vec4 v00000000063c3e80_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v00000000063f7b80_0, 0;
    %jmp T_1.1;
T_1.0 ;
    %load/vec4 v00000000063c3b60_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.2, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v00000000063f7b80_0, 0;
    %jmp T_1.3;
T_1.2 ;
    %load/vec4 v00000000063c3f20_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.4, 8;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v00000000063f7b80_0, 0;
T_1.4 ;
T_1.3 ;
T_1.1 ;
    %jmp T_1;
    .thread T_1;
    .scope S_0000000006392f30;
T_2 ;
    %wait E_00000000063d1370;
    %fork t_1, S_00000000063930c0;
    %jmp t_0;
    .scope S_00000000063930c0;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000000063c4060_0, 0, 32;
T_2.0 ; Top of for-loop 
    %load/vec4 v00000000063c4060_0;
    %cmpi/s 1, 0, 32;
    %jmp/0xz T_2.1, 5;
    %fork t_3, S_0000000006393250;
    %jmp t_2;
    .scope S_0000000006393250;
t_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000000063c4420_0, 0, 32;
T_2.3 ; Top of for-loop 
    %load/vec4 v00000000063c4420_0;
    %cmpi/s 8, 0, 32;
    %jmp/0xz T_2.4, 5;
    %ix/getv/s 4, v00000000063c4060_0;
    %load/vec4a v00000000063c3c00, 4;
    %pushi/vec4 8, 0, 32;
    %load/vec4 v00000000063c4420_0;
    %sub;
    %subi 1, 0, 32;
    %part/s 1;
    %ix/getv/s 4, v00000000063c4060_0;
    %flag_mov 8, 4;
    %ix/getv/s 5, v00000000063c4420_0;
    %flag_or 8, 4;
    %ix/load 6, 0, 0; Constant delay
    %ix/mov 3, 4;
    %flag_mov 4, 8;
    %assign/vec4/a/d v00000000063c3d40, 5, 6;
T_2.5 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000000063c4420_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000000063c4420_0, 0, 32;
    %jmp T_2.3;
T_2.4 ; for-loop exit label
    %end;
    .scope S_00000000063930c0;
t_2 %join;
T_2.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000000063c4060_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000000063c4060_0, 0, 32;
    %jmp T_2.0;
T_2.1 ; for-loop exit label
    %end;
    .scope S_0000000006392f30;
t_0 %join;
    %jmp T_2;
    .thread T_2;
    .scope S_0000000006392f30;
T_3 ;
    %wait E_00000000063d0e30;
    %load/vec4 v00000000063c3e80_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_3.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v00000000063f79a0_0, 0;
    %jmp T_3.1;
T_3.0 ;
    %load/vec4 v00000000063c3ca0_0;
    %cmpi/e 0, 0, 2;
    %jmp/0xz  T_3.2, 4;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v00000000063f79a0_0, 0;
    %jmp T_3.3;
T_3.2 ;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v00000000063f79a0_0, 0;
T_3.3 ;
T_3.1 ;
    %jmp T_3;
    .thread T_3;
    .scope S_0000000006392f30;
T_4 ;
    %wait E_00000000063d0e30;
    %load/vec4 v00000000063c3e80_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_4.0, 8;
    %pushi/vec4 0, 0, 4;
    %assign/vec4 v00000000063c4a60_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v00000000063c3b60_0, 0;
    %jmp T_4.1;
T_4.0 ;
    %load/vec4 v00000000063c3ca0_0;
    %cmpi/e 2, 0, 2;
    %jmp/0xz  T_4.2, 4;
    %load/vec4 v00000000063c4a60_0;
    %pad/u 32;
    %addi 1, 0, 32;
    %pad/u 4;
    %assign/vec4 v00000000063c4a60_0, 0;
    %load/vec4 v00000000063c4a60_0;
    %pad/u 32;
    %addi 1, 0, 32;
    %cmpi/e 8, 0, 32;
    %jmp/0xz  T_4.4, 4;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v00000000063c3b60_0, 0;
    %jmp T_4.5;
T_4.4 ;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v00000000063c3b60_0, 0;
T_4.5 ;
    %jmp T_4.3;
T_4.2 ;
    %pushi/vec4 0, 0, 4;
    %assign/vec4 v00000000063c4a60_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v00000000063c3b60_0, 0;
T_4.3 ;
T_4.1 ;
    %jmp T_4;
    .thread T_4;
    .scope S_0000000006392f30;
T_5 ;
    %wait E_00000000063d0e30;
    %load/vec4 v00000000063c3e80_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.0, 8;
    %pushi/vec4 0, 0, 2;
    %assign/vec4 v00000000063f7400_0, 0;
    %jmp T_5.1;
T_5.0 ;
    %load/vec4 v00000000063c3ca0_0;
    %assign/vec4 v00000000063f7400_0, 0;
T_5.1 ;
    %jmp T_5;
    .thread T_5;
    .scope S_0000000006392f30;
T_6 ;
Ewait_0 .event/or E_00000000063d00f0, E_0x0;
    %wait Ewait_0;
    %load/vec4 v00000000063f7400_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 2;
    %cmp/u;
    %jmp/1 T_6.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 2;
    %cmp/u;
    %jmp/1 T_6.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 2;
    %cmp/u;
    %jmp/1 T_6.2, 6;
    %pushi/vec4 0, 0, 2;
    %store/vec4 v00000000063c3ca0_0, 0, 2;
    %jmp T_6.4;
T_6.0 ;
    %load/vec4 v00000000063f7b80_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_6.5, 8;
    %pushi/vec4 1, 0, 2;
    %store/vec4 v00000000063c3ca0_0, 0, 2;
    %jmp T_6.6;
T_6.5 ;
    %pushi/vec4 0, 0, 2;
    %store/vec4 v00000000063c3ca0_0, 0, 2;
T_6.6 ;
    %jmp T_6.4;
T_6.1 ;
    %pushi/vec4 2, 0, 2;
    %store/vec4 v00000000063c3ca0_0, 0, 2;
    %jmp T_6.4;
T_6.2 ;
    %load/vec4 v00000000063c3b60_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_6.7, 8;
    %pushi/vec4 0, 0, 2;
    %store/vec4 v00000000063c3ca0_0, 0, 2;
    %jmp T_6.8;
T_6.7 ;
    %pushi/vec4 2, 0, 2;
    %store/vec4 v00000000063c3ca0_0, 0, 2;
T_6.8 ;
    %jmp T_6.4;
T_6.4 ;
    %pop/vec4 1;
    %jmp T_6;
    .thread T_6, $push;
    .scope S_0000000006392f30;
T_7 ;
    %wait E_00000000063cfc30;
    %load/vec4 v00000000063c4100_0;
    %inv;
    %assign/vec4 v00000000063c4100_0, 0;
    %load/vec4 v00000000063f7400_0;
    %cmpi/e 0, 0, 2;
    %jmp/0xz  T_7.0, 4;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v00000000063c4240_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v00000000063c41a0_0, 0;
    %jmp T_7.1;
T_7.0 ;
    %load/vec4 v00000000063f7400_0;
    %cmpi/e 1, 0, 2;
    %jmp/0xz  T_7.2, 4;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v00000000063c4240_0, 0;
    %fork t_5, S_0000000006375cb0;
    %jmp t_4;
    .scope S_0000000006375cb0;
t_5 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000000063c3de0_0, 0, 32;
T_7.4 ; Top of for-loop 
    %load/vec4 v00000000063c3de0_0;
    %cmpi/s 1, 0, 32;
    %jmp/0xz T_7.5, 5;
    %ix/getv/s 4, v00000000063c3de0_0;
    %load/vec4a v00000000063c3d40, 4;
    %load/vec4 v00000000063c4a60_0;
    %part/u 1;
    %ix/load 5, 0, 0;
    %ix/getv/s 4, v00000000063c3de0_0;
    %assign/vec4/off/d v00000000063c41a0_0, 4, 5;
T_7.6 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000000063c3de0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000000063c3de0_0, 0, 32;
    %jmp T_7.4;
T_7.5 ; for-loop exit label
    %end;
    .scope S_0000000006392f30;
t_4 %join;
    %jmp T_7.3;
T_7.2 ;
    %load/vec4 v00000000063f7400_0;
    %cmpi/e 2, 0, 2;
    %jmp/0xz  T_7.7, 4;
    %load/vec4 v00000000063c3fc0_0;
    %pad/u 32;
    %cmpi/e 1, 0, 32;
    %jmp/0xz  T_7.9, 4;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v00000000063c4240_0, 0;
    %load/vec4 v00000000063c4a60_0;
    %pad/u 32;
    %cmpi/u 8, 0, 32;
    %jmp/0xz  T_7.11, 5;
    %fork t_7, S_0000000006375e40;
    %jmp t_6;
    .scope S_0000000006375e40;
t_7 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000000063c46a0_0, 0, 32;
T_7.13 ; Top of for-loop 
    %load/vec4 v00000000063c46a0_0;
    %cmpi/s 1, 0, 32;
    %jmp/0xz T_7.14, 5;
    %ix/getv/s 4, v00000000063c46a0_0;
    %load/vec4a v00000000063c3d40, 4;
    %load/vec4 v00000000063c4a60_0;
    %part/u 1;
    %ix/load 5, 0, 0;
    %ix/getv/s 4, v00000000063c46a0_0;
    %assign/vec4/off/d v00000000063c41a0_0, 4, 5;
T_7.15 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000000063c46a0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000000063c46a0_0, 0, 32;
    %jmp T_7.13;
T_7.14 ; for-loop exit label
    %end;
    .scope S_0000000006392f30;
t_6 %join;
    %jmp T_7.12;
T_7.11 ;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v00000000063c41a0_0, 0;
T_7.12 ;
    %jmp T_7.10;
T_7.9 ;
    %load/vec4 v00000000063c3fc0_0;
    %pad/u 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_7.16, 4;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v00000000063c4240_0, 0;
    %load/vec4 v00000000063c41a0_0;
    %assign/vec4 v00000000063c41a0_0, 0;
T_7.16 ;
T_7.10 ;
    %jmp T_7.8;
T_7.7 ;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v00000000063c4240_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v00000000063c41a0_0, 0;
T_7.8 ;
T_7.3 ;
T_7.1 ;
    %jmp T_7;
    .thread T_7;
    .scope S_000000000639c380;
T_8 ;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v00000000063f72c0_0, 0, 3;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v00000000063f8800_0, 0, 3;
    %pushi/vec4 0, 0, 8;
    %store/vec4 v00000000063f7900_0, 0, 8;
    %pushi/vec4 0, 0, 2;
    %store/vec4 v00000000063f86c0_0, 0, 2;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000063f7f40_0, 0, 1;
    %end;
    .thread T_8, $init;
    .scope S_000000000639c380;
T_9 ;
    %wait E_00000000063d0e30;
    %load/vec4 v00000000063f8940_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_9.0, 8;
    %pushi/vec4 0, 0, 3;
    %assign/vec4 v00000000063f72c0_0, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v00000000063f74a0_0, 0, 1;
    %pushi/vec4 0, 0, 2;
    %store/vec4 v00000000063f86c0_0, 0, 2;
    %pushi/vec4 0, 0, 8;
    %store/vec4 v00000000063f7900_0, 0, 8;
    %jmp T_9.1;
T_9.0 ;
    %load/vec4 v00000000063f8800_0;
    %assign/vec4 v00000000063f72c0_0, 0;
    %load/vec4 v00000000063f7180_0;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v00000000063f7900_0, 4, 1;
    %load/vec4 v00000000063f8800_0;
    %cmpi/e 4, 0, 3;
    %jmp/0xz  T_9.2, 4;
    %load/vec4 v00000000063f86c0_0;
    %pad/u 32;
    %cmpi/e 2, 0, 32;
    %jmp/0xz  T_9.4, 4;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000063f74a0_0, 0, 1;
    %jmp T_9.5;
T_9.4 ;
    %load/vec4 v00000000063f86c0_0;
    %pad/u 32;
    %addi 1, 0, 32;
    %pad/u 2;
    %store/vec4 v00000000063f86c0_0, 0, 2;
T_9.5 ;
    %pushi/vec4 0, 0, 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v00000000063f7900_0, 4, 1;
    %jmp T_9.3;
T_9.2 ;
    %load/vec4 v00000000063f8800_0;
    %cmpi/e 5, 0, 3;
    %jmp/0xz  T_9.6, 4;
    %pushi/vec4 1, 0, 1;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4 v00000000063f7900_0, 4, 1;
T_9.6 ;
T_9.3 ;
T_9.1 ;
    %jmp T_9;
    .thread T_9;
    .scope S_000000000639c380;
T_10 ;
Ewait_1 .event/or E_00000000063d0070, E_0x0;
    %wait Ewait_1;
    %load/vec4 v00000000063f72c0_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 3;
    %cmp/u;
    %jmp/1 T_10.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 3;
    %cmp/u;
    %jmp/1 T_10.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 3;
    %cmp/u;
    %jmp/1 T_10.2, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 3;
    %cmp/u;
    %jmp/1 T_10.3, 6;
    %dup/vec4;
    %pushi/vec4 4, 0, 3;
    %cmp/u;
    %jmp/1 T_10.4, 6;
    %dup/vec4;
    %pushi/vec4 5, 0, 3;
    %cmp/u;
    %jmp/1 T_10.5, 6;
    %dup/vec4;
    %pushi/vec4 6, 0, 3;
    %cmp/u;
    %jmp/1 T_10.6, 6;
    %pushi/vec4 0, 0, 3;
    %store/vec4 v00000000063f8800_0, 0, 3;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000063f8440_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000063f8e40_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000063f7f40_0, 0, 1;
    %jmp T_10.8;
T_10.0 ;
    %pushi/vec4 1, 0, 3;
    %store/vec4 v00000000063f8800_0, 0, 3;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000063f8440_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000063f8e40_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000063f7f40_0, 0, 1;
    %jmp T_10.8;
T_10.1 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000063f7f40_0, 0, 1;
    %load/vec4 v00000000063f7fe0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_10.9, 8;
    %pushi/vec4 2, 0, 3;
    %store/vec4 v00000000063f8800_0, 0, 3;
    %jmp T_10.10;
T_10.9 ;
    %pushi/vec4 1, 0, 3;
    %store/vec4 v00000000063f8800_0, 0, 3;
T_10.10 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000063f8440_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000063f8e40_0, 0, 1;
    %jmp T_10.8;
T_10.2 ;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v00000000063f8440_0, 0, 1;
    %pushi/vec4 3, 0, 3;
    %store/vec4 v00000000063f8800_0, 0, 3;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000063f8e40_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000063f7f40_0, 0, 1;
    %jmp T_10.8;
T_10.3 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000063f8440_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v00000000063f8e40_0, 0, 1;
    %load/vec4 v00000000063f83a0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_10.11, 8;
    %pushi/vec4 4, 0, 3;
    %store/vec4 v00000000063f8800_0, 0, 3;
    %jmp T_10.12;
T_10.11 ;
    %load/vec4 v00000000063f8b20_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_10.13, 8;
    %pushi/vec4 5, 0, 3;
    %store/vec4 v00000000063f8800_0, 0, 3;
    %jmp T_10.14;
T_10.13 ;
    %pushi/vec4 3, 0, 3;
    %store/vec4 v00000000063f8800_0, 0, 3;
T_10.14 ;
T_10.12 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000063f7f40_0, 0, 1;
    %jmp T_10.8;
T_10.4 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000063f8e40_0, 0, 1;
    %pushi/vec4 6, 0, 3;
    %store/vec4 v00000000063f8800_0, 0, 3;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000063f8440_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000063f7f40_0, 0, 1;
    %jmp T_10.8;
T_10.5 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000063f8e40_0, 0, 1;
    %pushi/vec4 6, 0, 3;
    %store/vec4 v00000000063f8800_0, 0, 3;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000063f8440_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000063f7f40_0, 0, 1;
    %jmp T_10.8;
T_10.6 ;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v00000000063f7f40_0, 0, 1;
    %load/vec4 v00000000063f7fe0_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_10.15, 8;
    %pushi/vec4 1, 0, 3;
    %store/vec4 v00000000063f8800_0, 0, 3;
    %jmp T_10.16;
T_10.15 ;
    %pushi/vec4 6, 0, 3;
    %store/vec4 v00000000063f8800_0, 0, 3;
T_10.16 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000063f8e40_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000063f8440_0, 0, 1;
    %jmp T_10.8;
T_10.8 ;
    %pop/vec4 1;
    %jmp T_10;
    .thread T_10, $push;
    .scope S_00000000063ac6c0;
T_11 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000063f8da0_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000063f70e0_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000063f7040_0, 0, 1;
    %end;
    .thread T_11, $init;
    .scope S_00000000063ac6c0;
T_12 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000063f84e0_0, 0, 1;
    %fork t_9, S_00000000063ac850;
    %jmp t_8;
    .scope S_00000000063ac850;
t_9 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000000063c4920_0, 0, 32;
T_12.0 ; Top of for-loop 
    %load/vec4 v00000000063c4920_0;
    %cmpi/s 1000, 0, 32;
    %jmp/0xz T_12.1, 5;
    %delay 5, 0;
    %load/vec4 v00000000063f84e0_0;
    %inv;
    %store/vec4 v00000000063f84e0_0, 0, 1;
T_12.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000000063c4920_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000000063c4920_0, 0, 32;
    %jmp T_12.0;
T_12.1 ; for-loop exit label
    %end;
    .scope S_00000000063ac6c0;
t_8 %join;
    %end;
    .thread T_12;
    .scope S_00000000063ac6c0;
T_13 ;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v00000000063f8580_0, 0, 1;
    %delay 20, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000063f8580_0, 0, 1;
    %delay 10, 0;
    %fork t_11, S_00000000063ac9e0;
    %jmp t_10;
    .scope S_00000000063ac9e0;
t_11 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000000063c4740_0, 0, 32;
T_13.0 ; Top of for-loop 
    %load/vec4 v00000000063c4740_0;
    %cmpi/s 3, 0, 32;
    %jmp/0xz T_13.1, 5;
    %fork t_13, S_000000000639c060;
    %jmp t_12;
    .scope S_000000000639c060;
t_13 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000000063c4880_0, 0, 32;
T_13.3 ; Top of for-loop 
    %load/vec4 v00000000063c4880_0;
    %cmpi/s 1000, 0, 32;
    %jmp/0xz T_13.4, 5;
    %delay 10, 0;
    %load/vec4 v00000000063f7540_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_13.6, 8;
    %jmp T_13.4; break
T_13.6 ;
T_13.5 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000000063c4880_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000000063c4880_0, 0, 32;
    %jmp T_13.3;
T_13.4 ; for-loop exit label
    %end;
    .scope S_00000000063ac9e0;
t_12 %join;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v00000000063f8da0_0, 0, 1;
    %delay 10, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000063f8da0_0, 0, 1;
    %fork t_15, S_000000000639c1f0;
    %jmp t_14;
    .scope S_000000000639c1f0;
t_15 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000000063c49c0_0, 0, 32;
T_13.8 ; Top of for-loop 
    %load/vec4 v00000000063c49c0_0;
    %cmpi/s 1000, 0, 32;
    %jmp/0xz T_13.9, 5;
    %delay 10, 0;
    %load/vec4 v00000000063f7540_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_13.11, 8;
    %jmp T_13.9; break
T_13.11 ;
T_13.10 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000000063c49c0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000000063c49c0_0, 0, 32;
    %jmp T_13.8;
T_13.9 ; for-loop exit label
    %end;
    .scope S_00000000063ac9e0;
t_14 %join;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v00000000063f70e0_0, 0, 1;
    %delay 10, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000063f70e0_0, 0, 1;
T_13.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000000063c4740_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000000063c4740_0, 0, 32;
    %jmp T_13.0;
T_13.1 ; for-loop exit label
    %end;
    .scope S_00000000063ac6c0;
t_10 %join;
    %end;
    .thread T_13;
    .scope S_00000000063ac6c0;
T_14 ;
    %vpi_call/w 3 78 "$dumpfile", "column_select_tb.vcd" {0 0 0};
    %vpi_call/w 3 79 "$dumpvars", 32'sb00000000000000000000000000000000, S_00000000063ac6c0 {0 0 0};
    %end;
    .thread T_14;
# The file index is used to find the file name in the following table.
:file_names 6;
    "N/A";
    "<interactive>";
    "-";
    "C:\Users\Mika\Programmieren\Projects\ch32v003-16x8-SPI-RGB-LED-Matrix\HDMI_to_Matrix_FPGA\Test_Project\Nano9K_Test\src\tx\column_select_tb.sv";
    "C:\Users\Mika\Programmieren\Projects\ch32v003-16x8-SPI-RGB-LED-Matrix\HDMI_to_Matrix_FPGA\Test_Project\Nano9K_Test\src\tx\column_select.sv";
    "C:\Users\Mika\Programmieren\Projects\ch32v003-16x8-SPI-RGB-LED-Matrix\HDMI_to_Matrix_FPGA\Test_Project\Nano9K_Test\src\tx\nspi_tx.sv";
