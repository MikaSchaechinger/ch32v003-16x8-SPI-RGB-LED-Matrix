#! 
:ivl_version "13.0 (devel)" "(s20221226-103-g418bbc14b)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "c:\Users\phili\WORKSP~1\FPGA_T~1\OSS-CA~1\lib\ivl\system.vpi";
:vpi_module "c:\Users\phili\WORKSP~1\FPGA_T~1\OSS-CA~1\lib\ivl\vhdl_sys.vpi";
:vpi_module "c:\Users\phili\WORKSP~1\FPGA_T~1\OSS-CA~1\lib\ivl\vhdl_textio.vpi";
:vpi_module "c:\Users\phili\WORKSP~1\FPGA_T~1\OSS-CA~1\lib\ivl\v2005_math.vpi";
:vpi_module "c:\Users\phili\WORKSP~1\FPGA_T~1\OSS-CA~1\lib\ivl\va_math.vpi";
:vpi_module "c:\Users\phili\WORKSP~1\FPGA_T~1\OSS-CA~1\lib\ivl\v2009.vpi";
S_000000000497be50 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_00000000061b40e0 .scope module, "nspi_tx_tb" "nspi_tx_tb" 3 1;
 .timescale 0 0;
P_00000000061925a0 .param/l "CHANNEL_NUMBER" 1 3 3, +C4<00000000000000000000000000000010>;
P_00000000061925d8 .param/l "SPI_SIZE" 1 3 4, +C4<00000000000000000000000000001000>;
v00000000061d1ea0_0 .array/port v00000000061d1ea0, 0;
L_00000000061b8c30 .functor BUFZ 8, v00000000061d1ea0_0, C4<00000000>, C4<00000000>, C4<00000000>;
v00000000061d1ea0_1 .array/port v00000000061d1ea0, 1;
L_00000000061b8d80 .functor BUFZ 8, v00000000061d1ea0_1, C4<00000000>, C4<00000000>, C4<00000000>;
v00000000061d1ae0_0 .var "clk", 0 0;
v00000000061d1ea0 .array "data_in", 0 1, 7 0;
v00000000061d15e0_0 .var "rst", 0 0;
v00000000061d12c0_0 .net "spi_clk", 0 0, v00000000061d1180_0;  1 drivers
v00000000061d1680_0 .net "spi_mosi", 1 0, v00000000061d1900_0;  1 drivers
v000000000622cf50_0 .var "start_tx", 0 0;
v000000000622c410_0 .net "tx_finish", 0 0, v00000000061d1d60_0;  1 drivers
S_00000000061b4270 .scope begin, "$ivl_for_loop9" "$ivl_for_loop9" 3 33, 3 33 0, S_00000000061b40e0;
 .timescale 0 0;
v00000000061d1cc0_0 .var/2s "i", 31 0;
S_00000000061b4400 .scope module, "dut" "nspi_tx" 3 20, 4 1 0, S_00000000061b40e0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "rst";
    .port_info 2 /INPUT 1 "start_tx";
    .port_info 3 /OUTPUT 1 "tx_finish";
    .port_info 4 /INPUT 16 "data_in";
    .port_info 5 /OUTPUT 1 "spi_clk";
    .port_info 6 /OUTPUT 2 "spi_mosi";
P_00000000061a30b0 .param/l "CHANNEL_NUMBER" 0 4 2, +C4<00000000000000000000000000000010>;
P_00000000061a30e8 .param/l "COUNTER_WIDTH" 1 4 27, +C4<00000000000000000000000000000100>;
P_00000000061a3120 .param/l "MSB_FIRST" 0 4 4, +C4<00000000000000000000000000000001>;
P_00000000061a3158 .param/l "SPI_SIZE" 0 4 3, +C4<00000000000000000000000000001000>;
enum00000000061c4e70 .enum4 (2)
   "IDLE" 2'b00,
   "STARTING" 2'b01,
   "TRANSMIT" 2'b10
 ;
v00000000061d19a0_0 .net "clk", 0 0, v00000000061d1ae0_0;  1 drivers
v00000000061d1b80_0 .var "counter", 3 0;
v00000000061d1f40 .array "data_in", 0 1;
v00000000061d1f40_0 .net v00000000061d1f40 0, 7 0, L_00000000061b8c30; 1 drivers
v00000000061d1f40_1 .net v00000000061d1f40 1, 7 0, L_00000000061b8d80; 1 drivers
v00000000061d1e00 .array "data_in_reg", 0 1, 7 0;
v00000000061d1720_0 .var "next_state", 1 0;
v00000000061d1c20_0 .var "overflow_finish", 0 0;
v00000000061d10e0_0 .net "rst", 0 0, v00000000061d15e0_0;  1 drivers
v00000000061d1180_0 .var "spi_clk", 0 0;
v00000000061d1900_0 .var "spi_mosi", 1 0;
v00000000061d1400_0 .net "start_tx", 0 0, v000000000622cf50_0;  1 drivers
v00000000061d1220_0 .var "start_tx_internal", 0 0;
v00000000061d14a0_0 .var "state", 1 0;
v00000000061d1d60_0 .var "tx_finish", 0 0;
E_00000000061cc2d0/0 .event negedge, v00000000061d19a0_0;
E_00000000061cc2d0/1 .event posedge, v00000000061d19a0_0;
E_00000000061cc2d0 .event/or E_00000000061cc2d0/0, E_00000000061cc2d0/1;
E_00000000061cc9d0 .event anyedge, v00000000061d14a0_0, v00000000061d1220_0, v00000000061d1b80_0;
E_00000000061cc390 .event posedge, v00000000061d10e0_0, v00000000061d19a0_0;
E_00000000061ccb10 .event posedge, v00000000061d19a0_0, v00000000061d1220_0;
E_00000000061ccb50 .event posedge, v00000000061d1220_0;
E_00000000061cc510 .event posedge, v00000000061d1c20_0, v00000000061d1400_0;
S_00000000061a31a0 .scope begin, "$ivl_for_loop4" "$ivl_for_loop4" 4 45, 4 45 0, S_00000000061b4400;
 .timescale 0 0;
v00000000061d1a40_0 .var/2s "i", 31 0;
S_00000000061a3330 .scope begin, "$ivl_for_loop5" "$ivl_for_loop5" 4 46, 4 46 0, S_00000000061a31a0;
 .timescale 0 0;
v00000000061d1040_0 .var/2s "j", 31 0;
S_000000000619a8a0 .scope begin, "$ivl_for_loop6" "$ivl_for_loop6" 4 51, 4 51 0, S_00000000061b4400;
 .timescale 0 0;
S_000000000619aa30 .scope begin, "$ivl_for_loop7" "$ivl_for_loop7" 4 120, 4 120 0, S_00000000061b4400;
 .timescale 0 0;
v00000000061d1540_0 .var/2s "i", 31 0;
S_000000000619abc0 .scope begin, "$ivl_for_loop8" "$ivl_for_loop8" 4 128, 4 128 0, S_00000000061b4400;
 .timescale 0 0;
v00000000061d1860_0 .var/2s "i", 31 0;
    .scope S_00000000061b4400;
T_0 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000061d1d60_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000061d1220_0, 0, 1;
    %pushi/vec4 0, 0, 2;
    %store/vec4 v00000000061d14a0_0, 0, 2;
    %pushi/vec4 0, 0, 2;
    %store/vec4 v00000000061d1720_0, 0, 2;
    %pushi/vec4 0, 0, 4;
    %store/vec4 v00000000061d1b80_0, 0, 4;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000061d1c20_0, 0, 1;
    %end;
    .thread T_0, $init;
    .scope S_00000000061b4400;
T_1 ;
    %wait E_00000000061cc510;
    %load/vec4 v00000000061d1c20_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v00000000061d1220_0, 0;
    %jmp T_1.1;
T_1.0 ;
    %load/vec4 v00000000061d1400_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.2, 8;
    %pushi/vec4 0, 0, 4;
    %assign/vec4 v00000000061d1b80_0, 0;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v00000000061d1220_0, 0;
T_1.2 ;
T_1.1 ;
    %jmp T_1;
    .thread T_1;
    .scope S_00000000061b4400;
T_2 ;
    %wait E_00000000061ccb50;
    %fork t_1, S_00000000061a31a0;
    %jmp t_0;
    .scope S_00000000061a31a0;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000000061d1a40_0, 0, 32;
T_2.0 ; Top of for-loop 
    %load/vec4 v00000000061d1a40_0;
    %cmpi/s 2, 0, 32;
    %jmp/0xz T_2.1, 5;
    %fork t_3, S_00000000061a3330;
    %jmp t_2;
    .scope S_00000000061a3330;
t_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000000061d1040_0, 0, 32;
T_2.3 ; Top of for-loop 
    %load/vec4 v00000000061d1040_0;
    %cmpi/s 8, 0, 32;
    %jmp/0xz T_2.4, 5;
    %ix/getv/s 4, v00000000061d1a40_0;
    %load/vec4a v00000000061d1f40, 4;
    %pushi/vec4 8, 0, 32;
    %load/vec4 v00000000061d1040_0;
    %sub;
    %subi 1, 0, 32;
    %part/s 1;
    %ix/getv/s 4, v00000000061d1a40_0;
    %flag_mov 8, 4;
    %ix/getv/s 5, v00000000061d1040_0;
    %flag_or 8, 4;
    %ix/load 6, 0, 0; Constant delay
    %ix/mov 3, 4;
    %flag_mov 4, 8;
    %assign/vec4/a/d v00000000061d1e00, 5, 6;
T_2.5 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000000061d1040_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000000061d1040_0, 0, 32;
    %jmp T_2.3;
T_2.4 ; for-loop exit label
    %end;
    .scope S_00000000061a31a0;
t_2 %join;
T_2.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000000061d1a40_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000000061d1a40_0, 0, 32;
    %jmp T_2.0;
T_2.1 ; for-loop exit label
    %end;
    .scope S_00000000061b4400;
t_0 %join;
    %jmp T_2;
    .thread T_2;
    .scope S_00000000061b4400;
T_3 ;
    %wait E_00000000061ccb10;
    %load/vec4 v00000000061d1220_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_3.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v00000000061d1d60_0, 0;
    %jmp T_3.1;
T_3.0 ;
    %load/vec4 v00000000061d14a0_0;
    %cmpi/e 0, 0, 2;
    %jmp/0xz  T_3.2, 4;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v00000000061d1d60_0, 0;
T_3.2 ;
T_3.1 ;
    %jmp T_3;
    .thread T_3;
    .scope S_00000000061b4400;
T_4 ;
    %wait E_00000000061cc390;
    %load/vec4 v00000000061d10e0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_4.0, 8;
    %pushi/vec4 0, 0, 2;
    %assign/vec4 v00000000061d14a0_0, 0;
    %jmp T_4.1;
T_4.0 ;
    %load/vec4 v00000000061d1720_0;
    %assign/vec4 v00000000061d14a0_0, 0;
T_4.1 ;
    %jmp T_4;
    .thread T_4;
    .scope S_00000000061b4400;
T_5 ;
Ewait_0 .event/or E_00000000061cc9d0, E_0x0;
    %wait Ewait_0;
    %load/vec4 v00000000061d14a0_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 2;
    %cmp/u;
    %jmp/1 T_5.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 2;
    %cmp/u;
    %jmp/1 T_5.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 2;
    %cmp/u;
    %jmp/1 T_5.2, 6;
    %pushi/vec4 0, 0, 2;
    %store/vec4 v00000000061d1720_0, 0, 2;
    %jmp T_5.4;
T_5.0 ;
    %load/vec4 v00000000061d1220_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.5, 8;
    %pushi/vec4 1, 0, 2;
    %store/vec4 v00000000061d1720_0, 0, 2;
    %jmp T_5.6;
T_5.5 ;
    %pushi/vec4 0, 0, 2;
    %store/vec4 v00000000061d1720_0, 0, 2;
T_5.6 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000061d1c20_0, 0, 1;
    %jmp T_5.4;
T_5.1 ;
    %pushi/vec4 2, 0, 2;
    %store/vec4 v00000000061d1720_0, 0, 2;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000061d1c20_0, 0, 1;
    %jmp T_5.4;
T_5.2 ;
    %load/vec4 v00000000061d1b80_0;
    %pad/u 32;
    %cmpi/e 8, 0, 32;
    %jmp/0xz  T_5.7, 4;
    %pushi/vec4 0, 0, 2;
    %store/vec4 v00000000061d1720_0, 0, 2;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v00000000061d1c20_0, 0, 1;
    %jmp T_5.8;
T_5.7 ;
    %pushi/vec4 2, 0, 2;
    %store/vec4 v00000000061d1720_0, 0, 2;
    %load/vec4 v00000000061d1c20_0;
    %store/vec4 v00000000061d1c20_0, 0, 1;
T_5.8 ;
    %jmp T_5.4;
T_5.4 ;
    %pop/vec4 1;
    %jmp T_5;
    .thread T_5, $push;
    .scope S_00000000061b4400;
T_6 ;
    %wait E_00000000061cc2d0;
    %load/vec4 v00000000061d14a0_0;
    %cmpi/e 0, 0, 2;
    %jmp/0xz  T_6.0, 4;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v00000000061d1180_0, 0;
    %pushi/vec4 0, 0, 2;
    %assign/vec4 v00000000061d1900_0, 0;
    %jmp T_6.1;
T_6.0 ;
    %load/vec4 v00000000061d14a0_0;
    %cmpi/e 1, 0, 2;
    %jmp/0xz  T_6.2, 4;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v00000000061d1180_0, 0;
    %fork t_5, S_000000000619aa30;
    %jmp t_4;
    .scope S_000000000619aa30;
t_5 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000000061d1540_0, 0, 32;
T_6.4 ; Top of for-loop 
    %load/vec4 v00000000061d1540_0;
    %cmpi/s 2, 0, 32;
    %jmp/0xz T_6.5, 5;
    %ix/getv/s 4, v00000000061d1540_0;
    %load/vec4a v00000000061d1e00, 4;
    %load/vec4 v00000000061d1b80_0;
    %part/u 1;
    %ix/load 5, 0, 0;
    %ix/getv/s 4, v00000000061d1540_0;
    %assign/vec4/off/d v00000000061d1900_0, 4, 5;
T_6.6 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000000061d1540_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000000061d1540_0, 0, 32;
    %jmp T_6.4;
T_6.5 ; for-loop exit label
    %end;
    .scope S_00000000061b4400;
t_4 %join;
    %jmp T_6.3;
T_6.2 ;
    %load/vec4 v00000000061d14a0_0;
    %cmpi/e 2, 0, 2;
    %jmp/0xz  T_6.7, 4;
    %load/vec4 v00000000061d19a0_0;
    %pad/u 32;
    %cmpi/e 1, 0, 32;
    %jmp/0xz  T_6.9, 4;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v00000000061d1180_0, 0;
    %load/vec4 v00000000061d1b80_0;
    %pad/u 32;
    %cmpi/u 8, 0, 32;
    %jmp/0xz  T_6.11, 5;
    %fork t_7, S_000000000619abc0;
    %jmp t_6;
    .scope S_000000000619abc0;
t_7 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000000061d1860_0, 0, 32;
T_6.13 ; Top of for-loop 
    %load/vec4 v00000000061d1860_0;
    %cmpi/s 2, 0, 32;
    %jmp/0xz T_6.14, 5;
    %ix/getv/s 4, v00000000061d1860_0;
    %load/vec4a v00000000061d1e00, 4;
    %load/vec4 v00000000061d1b80_0;
    %part/u 1;
    %ix/load 5, 0, 0;
    %ix/getv/s 4, v00000000061d1860_0;
    %assign/vec4/off/d v00000000061d1900_0, 4, 5;
T_6.15 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000000061d1860_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000000061d1860_0, 0, 32;
    %jmp T_6.13;
T_6.14 ; for-loop exit label
    %end;
    .scope S_00000000061b4400;
t_6 %join;
    %jmp T_6.12;
T_6.11 ;
    %pushi/vec4 0, 0, 2;
    %assign/vec4 v00000000061d1900_0, 0;
T_6.12 ;
    %jmp T_6.10;
T_6.9 ;
    %load/vec4 v00000000061d19a0_0;
    %pad/u 32;
    %cmpi/e 0, 0, 32;
    %jmp/0xz  T_6.16, 4;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v00000000061d1180_0, 0;
    %load/vec4 v00000000061d1b80_0;
    %addi 1, 0, 4;
    %assign/vec4 v00000000061d1b80_0, 0;
T_6.16 ;
T_6.10 ;
T_6.7 ;
T_6.3 ;
T_6.1 ;
    %jmp T_6;
    .thread T_6;
    .scope S_00000000061b40e0;
T_7 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000061d1ae0_0, 0, 1;
    %fork t_9, S_00000000061b4270;
    %jmp t_8;
    .scope S_00000000061b4270;
t_9 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000000061d1cc0_0, 0, 32;
T_7.0 ; Top of for-loop 
    %load/vec4 v00000000061d1cc0_0;
    %cmpi/s 10000, 0, 32;
    %jmp/0xz T_7.1, 5;
    %delay 1, 0;
    %load/vec4 v00000000061d1ae0_0;
    %inv;
    %store/vec4 v00000000061d1ae0_0, 0, 1;
T_7.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000000061d1cc0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000000061d1cc0_0, 0, 32;
    %jmp T_7.0;
T_7.1 ; for-loop exit label
    %end;
    .scope S_00000000061b40e0;
t_8 %join;
    %end;
    .thread T_7;
    .scope S_00000000061b40e0;
T_8 ;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v00000000061d15e0_0, 0, 1;
    %delay 20, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000061d15e0_0, 0, 1;
    %end;
    .thread T_8;
    .scope S_00000000061b40e0;
T_9 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000000000622cf50_0, 0, 1;
    %pushi/vec4 15, 0, 8;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v00000000061d1ea0, 4, 0;
    %pushi/vec4 240, 0, 8;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v00000000061d1ea0, 4, 0;
    %delay 100, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v000000000622cf50_0, 0, 1;
    %delay 10, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000000000622cf50_0, 0, 1;
    %delay 100, 0;
    %delay 100, 0;
    %delay 100, 0;
    %delay 100, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v000000000622cf50_0, 0, 1;
    %delay 10, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000000000622cf50_0, 0, 1;
    %delay 100, 0;
    %pushi/vec4 187, 0, 8;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v00000000061d1ea0, 4, 0;
    %delay 100, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v000000000622cf50_0, 0, 1;
    %delay 10, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v000000000622cf50_0, 0, 1;
    %delay 100, 0;
    %vpi_call/w 3 73 "$finish" {0 0 0};
    %end;
    .thread T_9;
    .scope S_00000000061b40e0;
T_10 ;
    %vpi_call/w 3 77 "$dumpfile", "nspi_tx_tb.vcd" {0 0 0};
    %vpi_call/w 3 78 "$dumpvars", 32'sb00000000000000000000000000000000, S_00000000061b40e0 {0 0 0};
    %end;
    .thread T_10;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "C:\Users\phili\workspace\ch32v003-16x8-SPI-RGB-LED-Matrix\HDMI_to_Matrix_FPGA\Test_Project\Nano9K_Test\src\tx\nspi_tx_tb.sv";
    "C:\Users\phili\workspace\ch32v003-16x8-SPI-RGB-LED-Matrix\HDMI_to_Matrix_FPGA\Test_Project\Nano9K_Test\src\tx\nspi_tx.sv";
