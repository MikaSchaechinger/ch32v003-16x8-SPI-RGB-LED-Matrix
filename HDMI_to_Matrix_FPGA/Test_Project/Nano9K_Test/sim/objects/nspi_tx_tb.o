#! 
:ivl_version "13.0 (devel)" "(s20221226-345-gc9548f033)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "C:\Users\Mika\PROGRA~1\FPGA\LUSHAY~1\OSS-CA~1\OSS-CA~1\lib\ivl\system.vpi";
:vpi_module "C:\Users\Mika\PROGRA~1\FPGA\LUSHAY~1\OSS-CA~1\OSS-CA~1\lib\ivl\vhdl_sys.vpi";
:vpi_module "C:\Users\Mika\PROGRA~1\FPGA\LUSHAY~1\OSS-CA~1\OSS-CA~1\lib\ivl\vhdl_textio.vpi";
:vpi_module "C:\Users\Mika\PROGRA~1\FPGA\LUSHAY~1\OSS-CA~1\OSS-CA~1\lib\ivl\v2005_math.vpi";
:vpi_module "C:\Users\Mika\PROGRA~1\FPGA\LUSHAY~1\OSS-CA~1\OSS-CA~1\lib\ivl\va_math.vpi";
:vpi_module "C:\Users\Mika\PROGRA~1\FPGA\LUSHAY~1\OSS-CA~1\OSS-CA~1\lib\ivl\v2009.vpi";
S_00000000063992f0 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0000000006375e60 .scope module, "nspi_tx_tb" "nspi_tx_tb" 3 1;
 .timescale 0 0;
P_0000000006359780 .param/l "CHANNEL_NUMBER" 1 3 3, +C4<00000000000000000000000000000010>;
P_00000000063597b8 .param/l "SPI_SIZE" 1 3 4, +C4<00000000000000000000000000001000>;
v00000000064289b0_1 .array/port v00000000064289b0, 1;
L_00000000063866c0 .functor BUFZ 8, v00000000064289b0_1, C4<00000000>, C4<00000000>, C4<00000000>;
v00000000064289b0_0 .array/port v00000000064289b0, 0;
L_0000000006386a40 .functor BUFZ 8, v00000000064289b0_0, C4<00000000>, C4<00000000>, C4<00000000>;
v00000000064291d0_0 .var "clk", 0 0;
v00000000064289b0 .array "data_in", 0 1, 7 0;
v0000000006428e10_0 .var "rst", 0 0;
v0000000006429590_0 .net "spi_clk", 0 0, v0000000006394aa0_0;  1 drivers
v00000000064287d0_0 .net "spi_mosi", 1 0, v0000000006394b40_0;  1 drivers
v00000000064280f0_0 .var "start_tx", 0 0;
v0000000006428730_0 .net "tx_finish", 0 0, v00000000064285f0_0;  1 drivers
S_0000000006375ff0 .scope begin, "$ivl_for_loop10" "$ivl_for_loop10" 3 54, 3 54 0, S_0000000006375e60;
 .timescale 0 0;
v0000000006394f00_0 .var/2s "i", 31 0;
S_0000000006376180 .scope begin, "$ivl_for_loop11" "$ivl_for_loop11" 3 56, 3 56 0, S_0000000006375ff0;
 .timescale 0 0;
v0000000006394e60_0 .var/2s "j", 31 0;
S_0000000006365420 .scope begin, "$ivl_for_loop12" "$ivl_for_loop12" 3 68, 3 68 0, S_0000000006375ff0;
 .timescale 0 0;
v00000000063954a0_0 .var/2s "j", 31 0;
S_00000000063655b0 .scope begin, "$ivl_for_loop9" "$ivl_for_loop9" 3 33, 3 33 0, S_0000000006375e60;
 .timescale 0 0;
v0000000006394c80_0 .var/2s "i", 31 0;
S_0000000006365740 .scope module, "spi_tx" "nspi_tx" 3 20, 4 1 0, S_0000000006375e60;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "rst";
    .port_info 2 /INPUT 1 "start_tx";
    .port_info 3 /OUTPUT 1 "tx_finish";
    .port_info 4 /INPUT 16 "data_in";
    .port_info 5 /OUTPUT 1 "spi_clk";
    .port_info 6 /OUTPUT 2 "spi_mosi";
P_00000000063934a0 .param/l "CHANNEL_NUMBER" 0 4 2, +C4<00000000000000000000000000000010>;
P_00000000063934d8 .param/l "COUNTER_WIDTH" 1 4 27, +C4<00000000000000000000000000000100>;
P_0000000006393510 .param/l "MSB_FIRST" 0 4 4, +C4<00000000000000000000000000000001>;
P_0000000006393548 .param/l "SPI_SIZE" 0 4 3, +C4<00000000000000000000000000001000>;
enum0000000006388e00 .enum4 (1)
   "CLK_NEXT" 1'b0,
   "MOSI_NEXT" 1'b1
 ;
enum0000000006388d60 .enum4 (2)
   "IDLE" 2'b00,
   "STARTING" 2'b01,
   "TRANSMIT" 2'b10
 ;
v00000000063946e0_0 .net "clk", 0 0, v00000000064291d0_0;  1 drivers
v0000000006395360_0 .var "counter", 3 0;
v0000000006395400_0 .var "counter_overflow_flag", 0 0;
v0000000006394640 .array "data_in", 0 1;
v0000000006394640_0 .net v0000000006394640 0, 7 0, L_0000000006386a40; 1 drivers
v0000000006394640_1 .net v0000000006394640 1, 7 0, L_00000000063866c0; 1 drivers
v0000000006394820 .array "data_in_reg", 0 1, 7 0;
v00000000063948c0_0 .var "next", 0 0;
v0000000006394960_0 .var "next_state", 1 0;
v0000000006394a00_0 .net "rst", 0 0, v0000000006428e10_0;  1 drivers
v0000000006394aa0_0 .var "spi_clk", 0 0;
v0000000006394b40_0 .var "spi_mosi", 1 0;
v0000000006394be0_0 .net "start_tx", 0 0, v00000000064280f0_0;  1 drivers
v0000000006394dc0_0 .var "start_tx_internal", 0 0;
v0000000006428af0_0 .var "state", 1 0;
v00000000064285f0_0 .var "tx_finish", 0 0;
E_000000000638bf90 .event posedge, v0000000006394a00_0, v00000000063946e0_0;
E_000000000638c790 .event anyedge, v0000000006428af0_0, v0000000006394dc0_0, v0000000006395400_0;
E_000000000638c7d0 .event posedge, v0000000006394dc0_0;
S_000000000635d6f0 .scope begin, "$ivl_for_loop4" "$ivl_for_loop4" 4 53, 4 53 0, S_0000000006365740;
 .timescale 0 0;
v00000000063952c0_0 .var/2s "i", 31 0;
S_000000000635d880 .scope begin, "$ivl_for_loop5" "$ivl_for_loop5" 4 54, 4 54 0, S_000000000635d6f0;
 .timescale 0 0;
v0000000006394d20_0 .var/2s "j", 31 0;
S_000000000635da10 .scope begin, "$ivl_for_loop6" "$ivl_for_loop6" 4 59, 4 59 0, S_0000000006365740;
 .timescale 0 0;
S_0000000006341d30 .scope begin, "$ivl_for_loop7" "$ivl_for_loop7" 4 160, 4 160 0, S_0000000006365740;
 .timescale 0 0;
v0000000006395220_0 .var/2s "i", 31 0;
S_0000000006341ec0 .scope begin, "$ivl_for_loop8" "$ivl_for_loop8" 4 169, 4 169 0, S_0000000006365740;
 .timescale 0 0;
v00000000063950e0_0 .var/2s "i", 31 0;
    .scope S_0000000006365740;
T_0 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0000000006394dc0_0, 0, 1;
    %pushi/vec4 0, 0, 2;
    %store/vec4 v0000000006428af0_0, 0, 2;
    %pushi/vec4 0, 0, 2;
    %store/vec4 v0000000006394960_0, 0, 2;
    %pushi/vec4 0, 0, 4;
    %store/vec4 v0000000006395360_0, 0, 4;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0000000006395400_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v00000000063948c0_0, 0, 1;
    %end;
    .thread T_0, $init;
    .scope S_0000000006365740;
T_1 ;
    %wait E_000000000638bf90;
    %load/vec4 v0000000006394a00_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0000000006394dc0_0, 0;
    %jmp T_1.1;
T_1.0 ;
    %load/vec4 v0000000006395400_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.2, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0000000006394dc0_0, 0;
    %jmp T_1.3;
T_1.2 ;
    %load/vec4 v0000000006394be0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.4, 8;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0000000006394dc0_0, 0;
T_1.4 ;
T_1.3 ;
T_1.1 ;
    %jmp T_1;
    .thread T_1;
    .scope S_0000000006365740;
T_2 ;
    %wait E_000000000638c7d0;
    %fork t_1, S_000000000635d6f0;
    %jmp t_0;
    .scope S_000000000635d6f0;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000000063952c0_0, 0, 32;
T_2.0 ; Top of for-loop 
    %load/vec4 v00000000063952c0_0;
    %cmpi/s 2, 0, 32;
    %jmp/0xz T_2.1, 5;
    %fork t_3, S_000000000635d880;
    %jmp t_2;
    .scope S_000000000635d880;
t_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000000006394d20_0, 0, 32;
T_2.3 ; Top of for-loop 
    %load/vec4 v0000000006394d20_0;
    %cmpi/s 8, 0, 32;
    %jmp/0xz T_2.4, 5;
    %ix/getv/s 4, v00000000063952c0_0;
    %load/vec4a v0000000006394640, 4;
    %pushi/vec4 8, 0, 32;
    %load/vec4 v0000000006394d20_0;
    %sub;
    %subi 1, 0, 32;
    %part/s 1;
    %ix/getv/s 4, v00000000063952c0_0;
    %flag_mov 8, 4;
    %ix/getv/s 5, v0000000006394d20_0;
    %flag_or 8, 4;
    %ix/load 6, 0, 0; Constant delay
    %ix/mov 3, 4;
    %flag_mov 4, 8;
    %assign/vec4/a/d v0000000006394820, 5, 6;
T_2.5 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000000006394d20_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0000000006394d20_0, 0, 32;
    %jmp T_2.3;
T_2.4 ; for-loop exit label
    %end;
    .scope S_000000000635d6f0;
t_2 %join;
T_2.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000000063952c0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000000063952c0_0, 0, 32;
    %jmp T_2.0;
T_2.1 ; for-loop exit label
    %end;
    .scope S_0000000006365740;
t_0 %join;
    %jmp T_2;
    .thread T_2;
    .scope S_0000000006365740;
T_3 ;
    %wait E_000000000638bf90;
    %load/vec4 v0000000006394a00_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_3.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v00000000064285f0_0, 0;
    %jmp T_3.1;
T_3.0 ;
    %load/vec4 v0000000006394960_0;
    %cmpi/e 0, 0, 2;
    %jmp/0xz  T_3.2, 4;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v00000000064285f0_0, 0;
    %jmp T_3.3;
T_3.2 ;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v00000000064285f0_0, 0;
T_3.3 ;
T_3.1 ;
    %jmp T_3;
    .thread T_3;
    .scope S_0000000006365740;
T_4 ;
    %wait E_000000000638bf90;
    %load/vec4 v0000000006394a00_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_4.0, 8;
    %pushi/vec4 0, 0, 4;
    %assign/vec4 v0000000006395360_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0000000006395400_0, 0;
    %jmp T_4.1;
T_4.0 ;
    %load/vec4 v0000000006394960_0;
    %cmpi/e 2, 0, 2;
    %jmp/0xz  T_4.2, 4;
    %load/vec4 v00000000063948c0_0;
    %cmpi/e 0, 0, 1;
    %jmp/0xz  T_4.4, 4;
    %load/vec4 v0000000006395360_0;
    %pad/u 32;
    %addi 1, 0, 32;
    %pad/u 4;
    %assign/vec4 v0000000006395360_0, 0;
T_4.4 ;
    %load/vec4 v0000000006395360_0;
    %pad/u 32;
    %addi 1, 0, 32;
    %cmpi/e 8, 0, 32;
    %jmp/0xz  T_4.6, 4;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0000000006395400_0, 0;
    %jmp T_4.7;
T_4.6 ;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0000000006395400_0, 0;
T_4.7 ;
    %jmp T_4.3;
T_4.2 ;
    %pushi/vec4 0, 0, 4;
    %assign/vec4 v0000000006395360_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0000000006395400_0, 0;
T_4.3 ;
T_4.1 ;
    %jmp T_4;
    .thread T_4;
    .scope S_0000000006365740;
T_5 ;
    %wait E_000000000638bf90;
    %load/vec4 v0000000006394a00_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_5.0, 8;
    %pushi/vec4 0, 0, 2;
    %assign/vec4 v0000000006428af0_0, 0;
    %jmp T_5.1;
T_5.0 ;
    %load/vec4 v0000000006394960_0;
    %assign/vec4 v0000000006428af0_0, 0;
T_5.1 ;
    %jmp T_5;
    .thread T_5;
    .scope S_0000000006365740;
T_6 ;
Ewait_0 .event/or E_000000000638c790, E_0x0;
    %wait Ewait_0;
    %load/vec4 v0000000006428af0_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 2;
    %cmp/u;
    %jmp/1 T_6.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 2;
    %cmp/u;
    %jmp/1 T_6.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 2;
    %cmp/u;
    %jmp/1 T_6.2, 6;
    %pushi/vec4 0, 0, 2;
    %store/vec4 v0000000006394960_0, 0, 2;
    %jmp T_6.4;
T_6.0 ;
    %load/vec4 v0000000006394dc0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_6.5, 8;
    %pushi/vec4 1, 0, 2;
    %store/vec4 v0000000006394960_0, 0, 2;
    %jmp T_6.6;
T_6.5 ;
    %pushi/vec4 0, 0, 2;
    %store/vec4 v0000000006394960_0, 0, 2;
T_6.6 ;
    %jmp T_6.4;
T_6.1 ;
    %pushi/vec4 2, 0, 2;
    %store/vec4 v0000000006394960_0, 0, 2;
    %jmp T_6.4;
T_6.2 ;
    %load/vec4 v0000000006395400_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_6.7, 8;
    %pushi/vec4 0, 0, 2;
    %store/vec4 v0000000006394960_0, 0, 2;
    %jmp T_6.8;
T_6.7 ;
    %pushi/vec4 2, 0, 2;
    %store/vec4 v0000000006394960_0, 0, 2;
T_6.8 ;
    %jmp T_6.4;
T_6.4 ;
    %pop/vec4 1;
    %jmp T_6;
    .thread T_6, $push;
    .scope S_0000000006365740;
T_7 ;
    %wait E_000000000638bf90;
    %load/vec4 v0000000006394a00_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_7.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0000000006394aa0_0, 0;
    %pushi/vec4 0, 0, 2;
    %assign/vec4 v0000000006394b40_0, 0;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v00000000063948c0_0, 0;
    %jmp T_7.1;
T_7.0 ;
    %load/vec4 v0000000006428af0_0;
    %cmpi/e 0, 0, 2;
    %jmp/0xz  T_7.2, 4;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0000000006394aa0_0, 0;
    %pushi/vec4 0, 0, 2;
    %assign/vec4 v0000000006394b40_0, 0;
    %jmp T_7.3;
T_7.2 ;
    %load/vec4 v0000000006428af0_0;
    %cmpi/e 1, 0, 2;
    %jmp/0xz  T_7.4, 4;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0000000006394aa0_0, 0;
    %fork t_5, S_0000000006341d30;
    %jmp t_4;
    .scope S_0000000006341d30;
t_5 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000000006395220_0, 0, 32;
T_7.6 ; Top of for-loop 
    %load/vec4 v0000000006395220_0;
    %cmpi/s 2, 0, 32;
    %jmp/0xz T_7.7, 5;
    %ix/getv/s 4, v0000000006395220_0;
    %load/vec4a v0000000006394820, 4;
    %load/vec4 v0000000006395360_0;
    %part/u 1;
    %ix/load 5, 0, 0;
    %ix/getv/s 4, v0000000006395220_0;
    %assign/vec4/off/d v0000000006394b40_0, 4, 5;
T_7.8 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000000006395220_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0000000006395220_0, 0, 32;
    %jmp T_7.6;
T_7.7 ; for-loop exit label
    %end;
    .scope S_0000000006365740;
t_4 %join;
    %jmp T_7.5;
T_7.4 ;
    %load/vec4 v0000000006428af0_0;
    %cmpi/e 2, 0, 2;
    %jmp/0xz  T_7.9, 4;
    %load/vec4 v00000000063948c0_0;
    %cmpi/e 1, 0, 1;
    %jmp/0xz  T_7.11, 4;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v00000000063948c0_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0000000006394aa0_0, 0;
    %load/vec4 v0000000006395360_0;
    %pad/u 32;
    %cmpi/u 8, 0, 32;
    %jmp/0xz  T_7.13, 5;
    %fork t_7, S_0000000006341ec0;
    %jmp t_6;
    .scope S_0000000006341ec0;
t_7 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000000063950e0_0, 0, 32;
T_7.15 ; Top of for-loop 
    %load/vec4 v00000000063950e0_0;
    %cmpi/s 2, 0, 32;
    %jmp/0xz T_7.16, 5;
    %ix/getv/s 4, v00000000063950e0_0;
    %load/vec4a v0000000006394820, 4;
    %load/vec4 v0000000006395360_0;
    %part/u 1;
    %ix/load 5, 0, 0;
    %ix/getv/s 4, v00000000063950e0_0;
    %assign/vec4/off/d v0000000006394b40_0, 4, 5;
T_7.17 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000000063950e0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000000063950e0_0, 0, 32;
    %jmp T_7.15;
T_7.16 ; for-loop exit label
    %end;
    .scope S_0000000006365740;
t_6 %join;
    %jmp T_7.14;
T_7.13 ;
    %pushi/vec4 0, 0, 2;
    %assign/vec4 v0000000006394b40_0, 0;
T_7.14 ;
    %jmp T_7.12;
T_7.11 ;
    %load/vec4 v00000000063948c0_0;
    %cmpi/e 0, 0, 1;
    %jmp/0xz  T_7.18, 4;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v00000000063948c0_0, 0;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v0000000006394aa0_0, 0;
    %load/vec4 v0000000006394b40_0;
    %assign/vec4 v0000000006394b40_0, 0;
T_7.18 ;
T_7.12 ;
    %jmp T_7.10;
T_7.9 ;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0000000006394aa0_0, 0;
    %pushi/vec4 0, 0, 2;
    %assign/vec4 v0000000006394b40_0, 0;
T_7.10 ;
T_7.5 ;
T_7.3 ;
T_7.1 ;
    %jmp T_7;
    .thread T_7;
    .scope S_0000000006375e60;
T_8 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000064291d0_0, 0, 1;
    %fork t_9, S_00000000063655b0;
    %jmp t_8;
    .scope S_00000000063655b0;
t_9 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000000006394c80_0, 0, 32;
T_8.0 ; Top of for-loop 
    %load/vec4 v0000000006394c80_0;
    %cmpi/s 10000, 0, 32;
    %jmp/0xz T_8.1, 5;
    %delay 1, 0;
    %load/vec4 v00000000064291d0_0;
    %inv;
    %store/vec4 v00000000064291d0_0, 0, 1;
T_8.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000000006394c80_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0000000006394c80_0, 0, 32;
    %jmp T_8.0;
T_8.1 ; for-loop exit label
    %end;
    .scope S_0000000006375e60;
t_8 %join;
    %end;
    .thread T_8;
    .scope S_0000000006375e60;
T_9 ;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0000000006428e10_0, 0, 1;
    %delay 20, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0000000006428e10_0, 0, 1;
    %end;
    .thread T_9;
    .scope S_0000000006375e60;
T_10 ;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0000000006428e10_0, 0, 1;
    %delay 20, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0000000006428e10_0, 0, 1;
    %pushi/vec4 1, 0, 8;
    %ix/load 4, 0, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v00000000064289b0, 4, 0;
    %pushi/vec4 0, 0, 8;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %store/vec4a v00000000064289b0, 4, 0;
    %delay 10, 0;
    %fork t_11, S_0000000006375ff0;
    %jmp t_10;
    .scope S_0000000006375ff0;
t_11 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000000006394f00_0, 0, 32;
T_10.0 ; Top of for-loop 
    %load/vec4 v0000000006394f00_0;
    %cmpi/s 4, 0, 32;
    %jmp/0xz T_10.1, 5;
    %fork t_13, S_0000000006376180;
    %jmp t_12;
    .scope S_0000000006376180;
t_13 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000000006394e60_0, 0, 32;
T_10.3 ; Top of for-loop 
    %load/vec4 v0000000006394e60_0;
    %cmpi/s 1000, 0, 32;
    %jmp/0xz T_10.4, 5;
    %delay 10, 0;
    %load/vec4 v0000000006428730_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_10.6, 8;
    %jmp T_10.4; break
T_10.6 ;
T_10.5 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000000006394e60_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0000000006394e60_0, 0, 32;
    %jmp T_10.3;
T_10.4 ; for-loop exit label
    %end;
    .scope S_0000000006375ff0;
t_12 %join;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v00000000064280f0_0, 0, 1;
    %delay 10, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000064280f0_0, 0, 1;
    %fork t_15, S_0000000006365420;
    %jmp t_14;
    .scope S_0000000006365420;
t_15 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000000063954a0_0, 0, 32;
T_10.8 ; Top of for-loop 
    %load/vec4 v00000000063954a0_0;
    %cmpi/s 1000, 0, 32;
    %jmp/0xz T_10.9, 5;
    %delay 10, 0;
    %load/vec4 v0000000006428730_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_10.11, 8;
    %jmp T_10.9; break
T_10.11 ;
T_10.10 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000000063954a0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000000063954a0_0, 0, 32;
    %jmp T_10.8;
T_10.9 ; for-loop exit label
    %end;
    .scope S_0000000006375ff0;
t_14 %join;
T_10.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000000006394f00_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0000000006394f00_0, 0, 32;
    %jmp T_10.0;
T_10.1 ; for-loop exit label
    %end;
    .scope S_0000000006375e60;
t_10 %join;
    %vpi_call/w 3 76 "$finish" {0 0 0};
    %end;
    .thread T_10;
    .scope S_0000000006375e60;
T_11 ;
    %vpi_call/w 3 81 "$dumpfile", "nspi_tx_tb.vcd" {0 0 0};
    %vpi_call/w 3 82 "$dumpvars", 32'sb00000000000000000000000000000000, S_0000000006375e60 {0 0 0};
    %end;
    .thread T_11;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "C:\Users\Mika\Programmieren\Projects\ch32v003-16x8-SPI-RGB-LED-Matrix\HDMI_to_Matrix_FPGA\Test_Project\Nano9K_Test\src\tx\nspi_tx_tb.sv";
    "C:\Users\Mika\Programmieren\Projects\ch32v003-16x8-SPI-RGB-LED-Matrix\HDMI_to_Matrix_FPGA\Test_Project\Nano9K_Test\src\tx\nspi_tx.sv";
