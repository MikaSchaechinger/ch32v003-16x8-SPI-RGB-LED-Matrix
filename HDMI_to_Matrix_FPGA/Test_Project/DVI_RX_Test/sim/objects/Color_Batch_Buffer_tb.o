#! 
:ivl_version "13.0 (devel)" "(s20221226-345-gc9548f033)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "C:\Users\Mika\PROGRA~1\FPGA\LUSHAY~1\OSS-CA~1\OSS-CA~1\lib\ivl\system.vpi";
:vpi_module "C:\Users\Mika\PROGRA~1\FPGA\LUSHAY~1\OSS-CA~1\OSS-CA~1\lib\ivl\vhdl_sys.vpi";
:vpi_module "C:\Users\Mika\PROGRA~1\FPGA\LUSHAY~1\OSS-CA~1\OSS-CA~1\lib\ivl\vhdl_textio.vpi";
:vpi_module "C:\Users\Mika\PROGRA~1\FPGA\LUSHAY~1\OSS-CA~1\OSS-CA~1\lib\ivl\v2005_math.vpi";
:vpi_module "C:\Users\Mika\PROGRA~1\FPGA\LUSHAY~1\OSS-CA~1\OSS-CA~1\lib\ivl\va_math.vpi";
:vpi_module "C:\Users\Mika\PROGRA~1\FPGA\LUSHAY~1\OSS-CA~1\OSS-CA~1\lib\ivl\v2009.vpi";
S_0000000006309910 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0000000006309aa0 .scope module, "Color_Batch_Buffer_tb" "Color_Batch_Buffer_tb" 3 3;
 .timescale -9 -12;
P_000000000635b370 .param/l "BATCH_SIZE" 1 3 6, +C4<00000000000000000000000000001000>;
v0000000006307380_0 .var "I_color", 7 0;
v0000000006307600_0 .var "I_color_valid", 0 0;
v0000000006307880_0 .net "O_batch_color", 63 0, v0000000006307560_0;  1 drivers
v00000000063ad6e0_0 .net "O_batch_ready", 0 0, L_0000000006353800;  1 drivers
v00000000063ad820_0 .var/2u "color_counter", 31 0;
v00000000063ad460_0 .var "rgb_clk", 0 0;
v00000000063ad1e0_0 .var "rst_n", 0 0;
S_00000000063508c0 .scope begin, "$ivl_for_loop1" "$ivl_for_loop1" 3 50, 3 50 0, S_0000000006309aa0;
 .timescale -9 -12;
v00000000063080a0_0 .var/2s "i", 31 0;
E_000000000635b870 .event negedge, v00000000063076a0_0;
S_0000000006350a50 .scope module, "dut" "Color_Batch_Buffer" 3 26, 4 1 0, S_0000000006309aa0;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "I_rgb_clk";
    .port_info 1 /INPUT 1 "I_rst_n";
    .port_info 2 /INPUT 8 "I_color";
    .port_info 3 /INPUT 1 "I_color_valid";
    .port_info 4 /OUTPUT 1 "O_batch_ready";
    .port_info 5 /OUTPUT 64 "O_batch_color";
P_000000000635cb60 .param/l "BATCH_SIZE" 0 4 2, +C4<00000000000000000000000000001000>;
P_000000000635cb98 .param/l "WRITE_POINTER_WIDTH" 1 4 16, +C4<00000000000000000000000000000100>;
L_0000000006353800 .functor AND 1, v00000000063081e0_0, L_00000000063ad640, C4<1>, C4<1>;
v0000000006307c40_0 .net "I_color", 7 0, v0000000006307380_0;  1 drivers
v0000000006307ba0_0 .net "I_color_valid", 0 0, v0000000006307600_0;  1 drivers
v00000000063076a0_0 .net "I_rgb_clk", 0 0, v00000000063ad460_0;  1 drivers
v0000000006308000_0 .net "I_rst_n", 0 0, v00000000063ad1e0_0;  1 drivers
v0000000006307560_0 .var "O_batch_color", 63 0;
v0000000006307e20_0 .net "O_batch_ready", 0 0, L_0000000006353800;  alias, 1 drivers
v0000000006307ec0_0 .net *"_ivl_0", 31 0, L_00000000063ade60;  1 drivers
L_00000000064c0088 .functor BUFT 1, C4<0000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0000000006307f60_0 .net *"_ivl_3", 27 0, L_00000000064c0088;  1 drivers
L_00000000064c00d0 .functor BUFT 1, C4<00000000000000000000000000000000>, C4<0>, C4<0>, C4<0>;
v0000000006307a60_0 .net/2u *"_ivl_4", 31 0, L_00000000064c00d0;  1 drivers
v0000000006307b00_0 .net *"_ivl_6", 0 0, L_00000000063ad640;  1 drivers
v0000000006307740_0 .var "active_buffer", 0 0;
v0000000006308140 .array "color_buffer", 15 0, 7 0;
v00000000063081e0_0 .var "output_valid", 0 0;
v00000000063072e0_0 .var "write_ptr", 3 0;
v0000000006308140_0 .array/port v0000000006308140, 0;
v0000000006308140_1 .array/port v0000000006308140, 1;
v0000000006308140_2 .array/port v0000000006308140, 2;
E_000000000635bbb0/0 .event anyedge, v0000000006307740_0, v0000000006308140_0, v0000000006308140_1, v0000000006308140_2;
v0000000006308140_3 .array/port v0000000006308140, 3;
v0000000006308140_4 .array/port v0000000006308140, 4;
v0000000006308140_5 .array/port v0000000006308140, 5;
v0000000006308140_6 .array/port v0000000006308140, 6;
E_000000000635bbb0/1 .event anyedge, v0000000006308140_3, v0000000006308140_4, v0000000006308140_5, v0000000006308140_6;
v0000000006308140_7 .array/port v0000000006308140, 7;
v0000000006308140_8 .array/port v0000000006308140, 8;
v0000000006308140_9 .array/port v0000000006308140, 9;
v0000000006308140_10 .array/port v0000000006308140, 10;
E_000000000635bbb0/2 .event anyedge, v0000000006308140_7, v0000000006308140_8, v0000000006308140_9, v0000000006308140_10;
v0000000006308140_11 .array/port v0000000006308140, 11;
v0000000006308140_12 .array/port v0000000006308140, 12;
v0000000006308140_13 .array/port v0000000006308140, 13;
v0000000006308140_14 .array/port v0000000006308140, 14;
E_000000000635bbb0/3 .event anyedge, v0000000006308140_11, v0000000006308140_12, v0000000006308140_13, v0000000006308140_14;
v0000000006308140_15 .array/port v0000000006308140, 15;
E_000000000635bbb0/4 .event anyedge, v0000000006308140_15;
E_000000000635bbb0 .event/or E_000000000635bbb0/0, E_000000000635bbb0/1, E_000000000635bbb0/2, E_000000000635bbb0/3, E_000000000635bbb0/4;
E_000000000635bbf0/0 .event negedge, v0000000006308000_0;
E_000000000635bbf0/1 .event posedge, v00000000063076a0_0;
E_000000000635bbf0 .event/or E_000000000635bbf0/0, E_000000000635bbf0/1;
L_00000000063ade60 .concat [ 4 28 0 0], v00000000063072e0_0, L_00000000064c0088;
L_00000000063ad640 .cmp/eq 32, L_00000000063ade60, L_00000000064c00d0;
S_0000000006350be0 .scope begin, "$ivl_for_loop0" "$ivl_for_loop0" 4 55, 4 55 0, S_0000000006350a50;
 .timescale 0 0;
v0000000006307d80_0 .var/2s "i", 31 0;
    .scope S_0000000006350a50;
T_0 ;
    %wait E_000000000635bbf0;
    %load/vec4 v0000000006308000_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.0, 8;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0000000006307740_0, 0;
    %pushi/vec4 0, 0, 4;
    %assign/vec4 v00000000063072e0_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v00000000063081e0_0, 0;
    %jmp T_0.1;
T_0.0 ;
    %load/vec4 v0000000006307ba0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.2, 8;
    %load/vec4 v0000000006307c40_0;
    %load/vec4 v0000000006307740_0;
    %pad/u 7;
    %pad/u 10;
    %muli 8, 0, 10;
    %pad/u 11;
    %load/vec4 v00000000063072e0_0;
    %pad/u 5;
    %pad/u 11;
    %add;
    %ix/vec4 3;
    %ix/load 4, 0, 0; Constant delay
    %assign/vec4/a/d v0000000006308140, 0, 4;
    %load/vec4 v00000000063072e0_0;
    %pad/u 32;
    %cmpi/e 7, 0, 32;
    %jmp/0xz  T_0.4, 4;
    %pushi/vec4 0, 0, 4;
    %assign/vec4 v00000000063072e0_0, 0;
    %pushi/vec4 1, 0, 1;
    %assign/vec4 v00000000063081e0_0, 0;
    %load/vec4 v0000000006307740_0;
    %inv;
    %assign/vec4 v0000000006307740_0, 0;
    %jmp T_0.5;
T_0.4 ;
    %load/vec4 v00000000063072e0_0;
    %addi 1, 0, 4;
    %assign/vec4 v00000000063072e0_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v00000000063081e0_0, 0;
T_0.5 ;
    %jmp T_0.3;
T_0.2 ;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v00000000063081e0_0, 0;
T_0.3 ;
T_0.1 ;
    %jmp T_0;
    .thread T_0;
    .scope S_0000000006350a50;
T_1 ;
Ewait_0 .event/or E_000000000635bbb0, E_0x0;
    %wait Ewait_0;
    %fork t_1, S_0000000006350be0;
    %jmp t_0;
    .scope S_0000000006350be0;
t_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0000000006307d80_0, 0, 32;
T_1.0 ; Top of for-loop 
    %load/vec4 v0000000006307d80_0;
    %cmpi/s 8, 0, 32;
    %jmp/0xz T_1.1, 5;
    %load/vec4 v0000000006307740_0;
    %inv;
    %pad/u 7;
    %pad/u 10;
    %muli 8, 0, 10;
    %pad/u 11;
    %load/vec4 v0000000006307d80_0;
    %pad/s 11;
    %add;
    %ix/vec4 4;
    %load/vec4a v0000000006308140, 4;
    %load/vec4 v0000000006307d80_0;
    %muli 8, 0, 32;
    %ix/vec4/s 4;
    %store/vec4 v0000000006307560_0, 4, 8;
T_1.2 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v0000000006307d80_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v0000000006307d80_0, 0, 32;
    %jmp T_1.0;
T_1.1 ; for-loop exit label
    %end;
    .scope S_0000000006350a50;
t_0 %join;
    %jmp T_1;
    .thread T_1, $push;
    .scope S_0000000006309aa0;
T_2 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000063ad460_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v00000000063ad1e0_0, 0, 1;
    %pushi/vec4 1, 0, 32;
    %store/vec4 v00000000063ad820_0, 0, 32;
    %end;
    .thread T_2, $init;
    .scope S_0000000006309aa0;
T_3 ;
    %delay 10000, 0;
    %load/vec4 v00000000063ad460_0;
    %inv;
    %store/vec4 v00000000063ad460_0, 0, 1;
    %jmp T_3;
    .thread T_3;
    .scope S_0000000006309aa0;
T_4 ;
    %pushi/vec4 0, 0, 8;
    %store/vec4 v0000000006307380_0, 0, 8;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0000000006307600_0, 0, 1;
    %delay 50000, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v00000000063ad1e0_0, 0, 1;
    %delay 20000, 0;
    %pushi/vec4 4, 0, 32;
T_4.0 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_4.1, 5;
    %jmp/1 T_4.1, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %fork t_3, S_00000000063508c0;
    %jmp t_2;
    .scope S_00000000063508c0;
t_3 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v00000000063080a0_0, 0, 32;
T_4.2 ; Top of for-loop 
    %load/vec4 v00000000063080a0_0;
    %cmpi/s 8, 0, 32;
    %jmp/0xz T_4.3, 5;
    %wait E_000000000635b870;
    %load/vec4 v00000000063ad820_0;
    %parti/s 8, 0, 2;
    %store/vec4 v0000000006307380_0, 0, 8;
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000000063ad820_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000000063ad820_0, 0, 32;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0000000006307600_0, 0, 1;
T_4.4 ; for-loop step statement
    ; show_stmt_assign_vector: Get l-value for compressed += operand
    %load/vec4 v00000000063080a0_0;
    %pushi/vec4 1, 0, 32;
    %add;
    %cast2;
    %store/vec4 v00000000063080a0_0, 0, 32;
    %jmp T_4.2;
T_4.3 ; for-loop exit label
    %end;
    .scope S_0000000006309aa0;
t_2 %join;
    %jmp T_4.0;
T_4.1 ;
    %pop/vec4 1;
    %delay 100000, 0;
    %vpi_call/w 3 65 "$finish" {0 0 0};
    %end;
    .thread T_4;
    .scope S_0000000006309aa0;
T_5 ;
    %vpi_call/w 3 70 "$dumpfile", "Color_Batch_Buffer_tb.vcd" {0 0 0};
    %vpi_call/w 3 71 "$dumpvars", 32'sb00000000000000000000000000000000, S_0000000006309aa0 {0 0 0};
    %end;
    .thread T_5;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "C:\Users\Mika\Programmieren\Projects\ch32v003-16x8-SPI-RGB-LED-Matrix\HDMI_to_Matrix_FPGA\Test_Project\DVI_RX_Test\src\dvi_rx\Color_Batch_Buffer_tb.sv";
    "C:\Users\Mika\Programmieren\Projects\ch32v003-16x8-SPI-RGB-LED-Matrix\HDMI_to_Matrix_FPGA\Test_Project\DVI_RX_Test\src\dvi_rx\Color_Batch_Buffer.sv";
